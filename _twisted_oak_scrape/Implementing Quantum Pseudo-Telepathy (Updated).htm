<!DOCTYPE html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!-- Consider adding an manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en"><script src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/Post6536_implementing-quantum-pseudo-telepathy.htm" async=""></script><script>var COMSCORE={beacon:function(){},purge:function(){},__noSuchMethod__:function(){}}</script><script>var urchinTracker=function(){},_gaq={push:function(){try {if(arguments[0][0]=='_link')window.location.href=arguments[0][1]}catch(er){}}},_gat={_createTracker:function(){}, _getTracker:function(){return{__noSuchMethod__:function(){},_link:function(o){if(o)location.href=o;},_linkByPost:function(){return true;},_getLinkerUrl:function(o){return o;},_trackEvent:function(){}}}};</script><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
   <!-- blog feed link -->
  <link href="http://twistedoakstudios.com/blog/?feed=rss" rel="alternate" type="application/rss+xml" title="Twisted Oak Studios Blog">

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/b/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>Implementing Quantum Pseudo-Telepathy | Twisted Oak Studios Blog</title>

  <meta name="description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  <meta name="author" content="/humans.txt">

  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link rel="shortcut icon" href="http://twistedoakstudios.com/blog/favicon.ico">
  <link rel="apple-touch-icon-precomposed" href="http://twistedoakstudios.com/blog/apple-touch-icon-precomposed.png">

  	<!-- The 1140px Grid - http://cssgrid.net/ -->
	<link rel="stylesheet" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/1140.css">
    <link rel="stylesheet" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/style.css">
    <link rel="stylesheet" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/blogstyle.css">
<link rel="stylesheet" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/prettify.css" media="all">
<link rel="stylesheet" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/sunburst.css" media="all">
<script type="text/javascript" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/prettify.js"></script>

	<!-- Webfonts! -->
	<link href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/css.css" rel="stylesheet" type="text/css">

	<!-- Open Graph -->
	<meta property="og:title" content="Twisted Oak Studios">
	<meta property="og:type" content="company">
	<meta property="og:url" content="http://www.twistedoakstudios.com/">
	<meta property="og:image" content="http://www.twistedoakstudios.com/images/logo.png">
	<meta property="og:description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  
  <script src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/modernizr-2.js"></script>
<script src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/embed.js" async="" type="text/javascript"></script></head>
<body class=" customize-support" onload="prettyPrint()">
<!-- begin header -->
<div class="container header-container">
	<div class="row">
		<header>
			<div class="threecol">
				<a href="http://twistedoakstudios.com/"><img class="logo" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/logo.png"></a>
			</div><!-- .threecol -->
		
			<div class="fourcol navcol">
				<nav>
					<ul class="primary-nav clearfix">
						<li><a href="http://twistedoakstudios.com/">Home</a></li>
						<li><a href="http://twistedoakstudios.com/portfolio/">Portfolio</a></li>
						<li><a href="http://twistedoakstudios.com/labs/">Labs</a></li>
						<li><a class="scroll" href="#contact">Contact</a></li>
						<li><a href="http://twistedoakstudios.com/blog/">Blog</a></li>
					</ul>
				</nav>
			</div>    

    	</header>
	</div><!-- .row -->
</div><!-- .container -->


	<div id="main">
<span class="blog">
<div class="container home-container" id="home">
	<div class="row">
    <p class="big-callout">
    <!--We're hiring! Experience with Game Dev, Unity3D, Graphics, Signal Processing, or Networking? Eligible to work in Canada? 
      <a href="http://www.twistedoakstudios.com/jobs.php">Check it out</a>!
-->
		</p><section>
			
			<div class="ninecol">


<h2><a href="http://twistedoakstudios.com/blog/Post6536_implementing-quantum-pseudo-telepathy" rel="bookmark" title="Permanent Link to Implementing Quantum Pseudo-Telepathy">Implementing Quantum Pseudo-Telepathy</a></h2>
<div class="meta">posted by Craig Gidney on September 17, 2013</div>

<p>“If you can’t explain it to a computer, you don’t understand it.”</p>
<p>Last week, I thought I understood quantum pseudo-telepathy. Then I tried to make sense of the <em>details</em> of the <a href="https://en.wikipedia.org/wiki/Quantum_pseudo-telepathy">Wikipedia article</a>, and realized I had no idea what was going on. This week, I understand <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy">well enough to explain it to a computer</a>. Now we find out if I can explain it to humans.</p>
<h3>The Game</h3>
<p>Pseudo-telepathy is a bit of a funny name. The idea is that you could <a href="http://www.science20.com/hammock_physicist/telepathy_and_quantum_0">fool a person into thinking you were a telepath by using quantum physics</a>.
 You would do so, with a partner, by consistently winning a coordination
 game which has no classical consistently-winning strategy.</p>
<p>Not all games benefit from quantum techniques (i.e. exhibit 
pseudo-telepathy). For example, suppose two isolated players are being 
told random words and must say “Same” when told the same word, and 
“Different” otherwise. Classical players can’t consistently win that 
game, and players using quantum physics do no better. On the other hand,
 if the players just have to say the same word, they can already 
consistently win using only classical physics (hint: just say “cat”).</p>
<p>The simplest game that benefits from pseudo-telepathy is known as the <a href="http://web.utk.edu/%7Ecnattras/Phys250Fall2012/modules/module%203/a_pseudotelepathy_game.htm">Mermin-Peres magic square game</a>. In that game each player is assigning 0s and 1s to cells on a 3×3 board while trying to satisfy some parity constraints.</p>
<p>I find the Mermin-Peres magic square game a bit difficult to explain,
 so I tweaked it a bit. The resulting game is mathematically equivalent,
 but hopefully easier to grok. The rules are as follows:</p>
<ul>
<li>There’s a 3×3 grid, and two players (Alice and Bob).
</li><li>Alice and Bob each get two tokens, and are isolated from each other.
</li><li>A referee picks a row from the grid, and tells it to Alice.
</li><li>A referee picks a column from the grid, and tells it to Bob.
</li><li>Alice can either cover two cells of the indicated row with her tokens, or place no tokens.
</li><li>Bob has a similar choice: place no tokens, or cover two cells of the indicated column.
</li><li>They win if the cell common to the indicated row and column ends up covered by exactly one token.
</li></ul>
<p>Let’s go through a run of the game. Suppose the referee(s) pick the 
top row and the right column. By herself, Alice is told the row and 
decides not to use her tokens. By himself, Bob is told the column, 
decides to use his tokens, and places one in the top row (of the right 
column) and one in the bottom row. They then get together and compare. 
The top right cell is the one they have in common. Alice didn’t place a 
token on it, but Bob did, so there’s exactly one token in the common 
cell. They won!</p>
<p>The following diagram shows some examples of game outcomes, where the
 players either won, lost, or failed to follow the rules. The blue B 
tokens belong to Bob, and the green A tokens belong to Alice. When 
player chose to not use their tokens, the tokens are shown next to the 
board:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/ffxX6wx.png" alt="Ways to win, lose, and fail"></p>
<p>You can check that the diagram of outcomes makes sense, given the rules.</p>
<p>The above game has no consistently-winning strategy, if you’re 
limited to classical physics. Basically, the problem is that the number 
of placed tokens must be even whereas the total number of cells is odd. 
As a result, Alice and Bob can’t agree on a non-overlapping covering. 
They’ll end up expecting to win at most 8/9 games on average. (Exercise:
 Actually prove this instead of hand-waving it away.)</p>
<p>However, if you have access to quantum mechanics, you can win 100% of the time instead of only ~88% of the time.</p>
<h3>Telepathic Solution</h3>
<p>The last time I talked about quantum computing, explaining <a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm">Grover’s Quantum Search Algorithm</a>,
 I started from low level concepts and explained upward until we reached
 the solution. (It might be helpful to read or even re-read the Grover 
post first, but I’ll try to cover all the relevant concepts again here.)
 This time, I’m going to start by showing the solution and explaining 
downward.</p>
<p>So… here’s a diagram, <em>which you are not expected to understand yet</em>, which shows the components of the solution:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/Tdjxon6.png" alt="Circuits linked up to board"></p>
<p>Allow me to break down the process that the above diagram is supposed to communicate.</p>
<p>The diagram shows six <a href="https://en.wikipedia.org/wiki/Quantum_circuit">quantum logic circuits</a>,
 one for each row and one for each column. In the case shown, the 
referee(s) have picked the top row and the right column, so Alice has 
chosen the circuit corresponding to the top row and Bob has chosen the 
circuit corresponding to the right column.</p>
<p>The inputs to the chosen circuits are pre-shared entangled qubits. The qubit <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_037.png" class="ql-img-inline-formula " alt="a_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="12" width="15"> is entangled with the qubit <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_042.png" class="ql-img-inline-formula " alt="a_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="11" width="16">, and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_030.png" class="ql-img-inline-formula " alt="b_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="14"> with <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_002.png" class="ql-img-inline-formula " alt="b_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="16" width="15">. They are entangled such that the result of any circuit run on both <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_037.png" class="ql-img-inline-formula " alt="a_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="12" width="15"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_030.png" class="ql-img-inline-formula " alt="b_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="14"> or on both <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_042.png" class="ql-img-inline-formula " alt="a_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="11" width="16"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_002.png" class="ql-img-inline-formula " alt="b_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="16" width="15"> will <em>agree</em> on the result. (Of course, the “magic” requires running different circuits, manipulating that relationship.)</p>
<p>After Alice and Bob each run their respective entangled qubits through their chosen circuit, they measure both wires (they <a href="http://physics.stackexchange.com/q/33437/911">entangle themselves into the system</a>). For each wire, they get an ‘On’ or ‘Off’ result. Alice and Bob use those outputs to decide on how to play their tokens.</p>
<p>Alice’s top wire controls whether or not she places a token on the 
left-most cell of the indicated row. When the wire ends up On, she 
places a token. When it’s Off, she doesn’t place a token. She also does 
the same thing with her bottom wire, except it controls the center cell 
of the indicated row. She places a token in the remaining cell, the 
right-most one, if she already played one token but not the other.</p>
<p>Bob’s wires control his moves in the same fashion, except he matches 
up his left wire with the top-most cell of the indicated column, his 
right wire with the center cell, and uses the bottom-most cell to ensure
 he played both tokens or neither token.</p>
<p>It turns out that this strategy ensures they always win the game. 
Understanding why requires understanding the operation of a quantum 
circuit.</p>
<h3>Quantum Circuits: Wires=Vectors, Gates=Matrices</h3>
<p>As I explained in <a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm">Grover’s Quantum Search Algorithm</a>, a quantum circuit is made up of <em>wires</em> and <em>gates</em>.</p>
<p>Each wire is a <a href="https://en.wikipedia.org/wiki/Qubit">qubit</a>. It’s a qubit, instead of a bit, because the wires can be placed into <a href="https://en.wikipedia.org/wiki/Quantum_superposition">quantum superposition</a>. A superposition pairs a <a href="https://en.wikipedia.org/wiki/Complex_number">complex number</a> with every classical state the system can be in. The complex number associated with a state is called the state’s <a href="https://en.wikipedia.org/wiki/Quantum_amplitude">amplitude</a>. When you <a href="https://en.wikipedia.org/wiki/Quantum_measurement">measure</a> a superposition, the probability of finding it in state S is equal to the squared magnitude of S’s amplitude.</p>
<p>Superpositions are often represented using <a href="https://en.wikipedia.org/wiki/Bra_ket_notation">Bra-Ket notation</a>, where states are placed between a pipe <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_024.png" class="ql-img-inline-formula " alt="|" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="1"> and an angle braket <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_015.png" class="ql-img-inline-formula " alt="&gt;" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="11" width="12">, and amplitudes are multiplied against the states. For example, if you measured the four wire superposition <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_012.png" class="ql-img-inline-formula " alt="1 \cdot \left|\text{On,Off,Off,Off}\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="141">
 you’d always end up discovering the first wire being On, and the other 
three being Off. Conversely, if you measured the 2 wire superposition <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_035.png" class="ql-img-inline-formula " alt="\frac{-1}{2} \cdot \left(\left|\text{On,On}\right\rangle+\left|\text{On,Off}\right\rangle\right)+\frac{-i}{2} \left(\left|\text{Off,On}\right\rangle+\left|\text{Off,Off}\right\rangle\right)" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="22" width="404">, you’d find each possible outcome occurring with 25% probability.</p>
<p>Superpositions can also be represented as a raw complex vector. Of 
course, we need to decide on a mapping between each entry of the vector 
and the possible states. For our purposes, we’ll be interpreting <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_008.png" class="ql-img-inline-formula " alt="\text{On,Off,Off,Off}" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="15" width="113"> as the binary number 1000 and so the <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_004.png" class="ql-img-inline-formula " alt="2^3 = 8" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="15" width="49">‘th entry of a 16-dimensional vector will correspond to the amplitude of the state <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_007.png" class="ql-img-inline-formula " alt="\left|\text{On,Off,Off,Off}\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="119">.</p>
<p>The other type of component, gates, represent operations to apply to 
the vector of states. Quantum operations must be linear, and must 
preserve the fact that probabilities add up to 100%. In other words, 
every gate must correspond to a <a href="https://en.wikipedia.org/wiki/Unitary_matrix">unitary complex matrix</a>. That’s pretty convenient: we can simulate operations by multiplying <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_018.png" class="ql-img-inline-formula " alt="G \cdot S" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="39">, where <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_003.png" class="ql-img-inline-formula " alt="S" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="12"> is the vector corresponding to the superposition of our wires and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_041.png" class="ql-img-inline-formula " alt="G" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="14"> is the matrix corresponding to the gate to apply.</p>
<p>Gates are where the <a href="https://en.wikipedia.org/wiki/Phase_%28waves%29">phases</a>
 of the amplitudes actually matter. Quantum gates can mix the components
 of a superposition, causing the various ways an output can be reached 
from an input to <a href="https://en.wikipedia.org/wiki/Quantum_interference#Quantum_interference">interfere</a>. Whether this interference is destructive or constructive depends on the relative phases of the amplitudes.</p>
<h3>Used Gates</h3>
<p>Now that you know gates correspond to matrices, I can tell you what each gate used in the solution does.</p>
<p>As a reminder, here are the circuits we used:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/a8SLjXH.png" alt="Gates used for Pseudo Telepathy"></p>
<p>Each symbol on a wire corresponds to a gate. There are six different 
gates shown, three that apply to one wire and three that apply to two 
wires.</p>
<p>The three gates I used that apply to a single wire are the <a href="https://en.wikipedia.org/wiki/Hadamard_gate">Hadamard Gate</a>, the <a href="http://bit-player.org/wp-content/extras/bph-publications/AmSci-1995-07-Hayes-quantum.pdf">Square Root of Not Gate</a>, and what I call a Splitter Gate (because it does to a wire what <a href="https://en.wikipedia.org/wiki/Beam_splitter">beam splitters</a> do to photons). The following diagram shows the symbol and equivalent matrix of each gate:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/qOYUp3y.png" alt="1-Wire Quantum Gates"></p>
<p>Notice that each of these gates mixes their inputs together. That’s 
where the fact that we’re quantum, instead of classical, comes into 
play: two components of a superposition can destructively interfere when
 being run through a gate. Stealing a diagram from <a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm">Grover’s Quantum Search Algorithm</a>, showing this in action for the Hadamard Gate:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/hVZ2zzg.gif" alt="Hadamard Gate is own inverse"></p>
<p>Notice how the blue superposition starts off as On, gets mixed into 
50% On/Off, then gets unmixed back into On. The red superposition does 
the same thing, but with Off! This would obviously be kind of difficult 
to do with a classical circuit and one wire that carried only a single 
bit. The magic is in the phases of the intermediate state: they agree 
when the initial state was On and disagree when it was Off, and so the 
interference plays out differently when applying the second gate.</p>
<p>The 2-wire gates I used are actually simpler than the 1-wire gates, 
because none of them do any mixing. They all have classical equivalents.
 The <a href="https://en.wikipedia.org/wiki/Quantum_gate#Swap_gate">Swap Gate</a> swaps the two wires’ states, the <a href="https://en.wikipedia.org/wiki/Controlled_NOT_gate">Controlled Not Gates</a>
 invert one wire only if the other is On, and the Decrement Gate 
decreases the binary number represented by the wires (when interpreted 
as binary digits) by 1. The following diagram shows the symbol and 
equivalent matrix of each gate:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/rfOfthU.png" alt="2-Wire Quantum Gates"></p>
<p>These gates, as well as several others, are included in the <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy/blob/fe21e15b8b0e34fcd213911c83e8c2cddf7c526d/QuantumPseudoTelepathy/Quantum/Gates.cs">Gates class</a> of my implementation.</p>
<p>The effect of two gates, one after the other, is equivalent to <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_011.png" class="ql-img-inline-formula " alt="G_2 \cdot G_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="54">, where <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_039.png" class="ql-img-inline-formula " alt="G_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="15" width="21"> is the second gate’s matrix and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_023.png" class="ql-img-inline-formula " alt="G_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="20"> is the first gate’s matrix. When gates apply to distinct wires, the order of <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_023.png" class="ql-img-inline-formula " alt="G_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="20"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_039.png" class="ql-img-inline-formula " alt="G_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="15" width="21"> doesn’t matter.</p>
<p>Note that when you want to apply a gate meant for one wire to a circuit that has two wires, you use the <a href="https://en.wikipedia.org/wiki/Tensor_product">tensor product</a>
 against an identity matrix to expand the gate’s equivalent matrix from 
2×2 to 4×4. If the gate is supposed to apply to the first wire, the 
equivalent two-wire gate is <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_020.png" class="ql-img-inline-formula " alt="G \otimes I" title="Rendered by QuickLaTeX.com" style="vertical-align: -2px;" height="14" width="45">, where <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_041.png" class="ql-img-inline-formula " alt="G" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="14"> is the 1-wire gate’s equivalent matrix and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_038.png" class="ql-img-inline-formula " alt="I" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="9"> is the identity matrix. If the gate is supposed to apply to the second wire, then the equivalent gate is <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_040.png" class="ql-img-inline-formula " alt="I \otimes G" title="Rendered by QuickLaTeX.com" style="vertical-align: -2px;" height="14" width="45">. The next section has an example of this.</p>
<h3>Matrices Equivalent to the Circuits</h3>
<p>Now that we know what each individual gate does, we can multiply 
their effects together to get a single matrix equivalent to each 
circuit. For the circuit that applies to the right column, made up of a 
Decrement gate followed by a Square Root of Not Gate on the second wire,
 that works like this:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_022.png" class="ql-img-inline-formula " alt="(I \otimes SRN) \cdot DEC = \left( \left[ \begin{array}{cc} 1 &amp; 0 \\ 0 &amp; 1 \\ \end{array} \right] \otimes  \frac{1}{\sqrt{2}} \left[ \begin{array}{cc} 1 &amp; -1 \\ 1 &amp; 1 \\ \end{array} \right] \right)  \cdot M_{DEC} \newline \phantom{(I \otimes SRN) \cdot DEC}=  \frac{1}{\sqrt{2}} \left[ \begin{array}{cc} 1 \cdot \left[ \begin{array}{cc} 1 &amp; -1 \\ 1 &amp; 1 \end{array} \right]&amp; 0 \cdot \left[ \begin{array}{cc} 1 &amp; -1 \\ 1 &amp; 1 \end{array} \right]\\ 0 \cdot \left[ \begin{array}{cc} 1 &amp; -1 \\ 1 &amp; 1 \end{array} \right] &amp; 1 \cdot \left[ \begin{array}{cc} 1 &amp; -1 \\ 1 &amp; 1 \end{array} \right] \end{array} \right] \cdot M_{DEC} \newline \phantom{(I \otimes SRN) \cdot DEC} = \frac{1}{\sqrt{2}} \left[ \begin{array}{cccc} 1 &amp; -1 &amp; 0 &amp; 0 \\ 1 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; -1 \\ 0 &amp; 0 &amp; 1 &amp; 1 \\ \end{array} \right]  \cdot \left[ \begin{array}{cccc} 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 &amp; 1 \\ 1 &amp; 0 &amp; 0 &amp; 0 \\ \end{array} \right]  \newline \phantom{(I \otimes SRN) \cdot DEC} = \frac{1}{\sqrt{2}} \left[ \begin{array}{cccc} 0 &amp; 1 &amp; -1 &amp; 0 \\ 0 &amp; 1 &amp; 1 &amp; 0 \\ -1 &amp; 0 &amp; 0 &amp; 1 \\ 1 &amp; 0 &amp; 0 &amp; 1 \\ \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="312" width="518"></p>
<p>As you can see, I used the tensor product to adjust the Square Root 
of Not Gate to apply to the second wire out of two wires instead of just
 a single wire. Then I multiplied the resulting matrix against the 
Decrement Gate’s matrix. The resulting 4×4 matrix represents the 
circuit’s operation in its entirety.</p>
<p>The <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy/blob/fe21e15b8b0e34fcd213911c83e8c2cddf7c526d/QuantumPseudoTelepathy/Quantum/PseudoTelepathyCircuits.cs">PseudoTelepathyCircuits class</a>
 of my implementation includes both the circuits and their equivalent 
matrices. I’ll include the matrices here as well, just to be nice. Note 
that, since it turns out that the phase of each row doesn’t matter (will
 explain), I’ve simplified them slightly by adjusting the row phases.</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_013.png" class="ql-img-inline-formula " alt="A_{top} = \frac{1}{\sqrt{2}} \left[ \begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; i \\ 	0 &amp; 1 &amp;-i &amp; 0 \\ 	0 &amp;-i &amp; 1 &amp; 0 \\ 	i &amp; 0 &amp; 0 &amp; 1 \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="223"> &nbsp; &nbsp; &nbsp; <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_034.png" class="ql-img-inline-formula " alt="A_{center} = \frac{1}{2} \left[ \begin{array}{cccc} 1 &amp; i &amp; i &amp; 1 &amp; 	1 &amp;-i &amp; i &amp;-1 &amp; 	1 &amp; i &amp;-i &amp;-1 &amp; 	1 &amp;-i &amp;-i &amp; 1 \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="245"> &nbsp; &nbsp; &nbsp; <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_016.png" class="ql-img-inline-formula " alt="A_{bottom} = \frac{1}{2} \left[ \begin{array}{cccc} 1 &amp; 1 &amp; 1 &amp;-1 &amp; 	1 &amp; 1 &amp;-1 &amp; 1 &amp; 	1 &amp;-1 &amp; 1 &amp; 1 &amp;        -1 &amp; 1 &amp; 1 &amp; 1 \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="267"></p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_033.png" class="ql-img-inline-formula " alt="B_{left} = \frac{1}{2} \left[ \begin{array}{cccc} 1 &amp;-1 &amp; i &amp; i &amp; 	1 &amp; 1 &amp;-i &amp; i &amp; 	1 &amp; 1 &amp; i &amp;-i &amp; 	1 &amp;-1 &amp;-i &amp;-i \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="230"> &nbsp; &nbsp; &nbsp; <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_036.png" class="ql-img-inline-formula " alt="B_{center} = \frac{1}{2} \left[ \begin{array}{cccc} 1 &amp; i &amp;-1 &amp; i &amp; 	1 &amp;-i &amp; 1 &amp; i &amp; 	1 &amp; i &amp; 1 &amp;-i &amp; 	1 &amp;-i &amp;-1 &amp;-i \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="245"> &nbsp; &nbsp; &nbsp; <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_021.png" class="ql-img-inline-formula " alt="B_{right} = \frac{1}{\sqrt{2}} \left[ \begin{array}{cccc} 0 &amp; 1 &amp;-1 &amp; 0 &amp; 	0 &amp; 1 &amp; 1 &amp; 0 &amp; 	1 &amp; 0 &amp; 0 &amp;-1 &amp; 	1 &amp; 0 &amp; 0 &amp; 1 \end{array} \right]" title="Rendered by QuickLaTeX.com" style="vertical-align: -39px;" height="86" width="241"></p>
<p>In many ways, the matrices are simpler to work with than the circuits.</p>
<h3>Tangent: How I Found the Matrices/Circuits</h3>
<p>I suppose now’s the time to point out that I didn’t actually start 
with the circuits and get the matrices from that. Things went the other 
way. First, I found the matrices.</p>
<p>Finding the matrices was actually quite difficult. At the time, I was
 still confused how the heck the details of this pseudo-telepathy 
worked. I had <em>no idea</em> what the hell the Wikipedia article, <a href="https://en.wikipedia.org/w/index.php?title=Quantum_pseudo-telepathy&amp;oldid=563019964">as it was at the time of this writing</a>,
 was trying to communicate by placing Pauli matrices into a 3×3 grid 
(fun fact: I still don’t). I started googling and reading the papers and
 articles Wikipedia cited, and reading the promising things those things
 cited.</p>
<p>Eventually, I found the paper <a href="http://arxiv.org/pdf/quant-ph/0407221.pdf">Quantum Pseudo-Telepathy</a>
 by Gilles Brassard et al. It’s a review of games that exhibit 
pseudo-telepathy, and happens to include the matrices for the operations
 used by Alice and Bob (see Section 5.2). Once I had the matrices, I 
could hack together code to make sure they worked and tweak them to work
 with my game instead of the original Mermin-Peres magic square game.</p>
<p>Now, in reality, quantum computers will not be able to just have 
gates for every arbitrary unitary matrix we can imagine. We’ll build 
them out of simpler gates. Circuits are also more concrete when it comes
 to diagramming things, so I wanted to find circuits made out of simple 
gates that ended up matching these matrices.</p>
<p>First, I tried to build up these circuits by hand. Apparently I’m 
terrible at this because my circuits each used like 20 gates. Second, I 
wrote a program to brute force search for circuits that matched the 
matrices. That worked a lot better, using at most 6 gates per circuit. 
Finally, I realized that the phases of the rows don’t matter (you can 
multiply any row by <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_026.png" class="ql-img-inline-formula " alt="i" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="6"> or <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_043.png" class="ql-img-inline-formula " alt="-1" title="Rendered by QuickLaTeX.com" style="vertical-align: -1px;" height="13" width="21"> or <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_006.png" class="ql-img-inline-formula " alt="\frac{1+i}{\sqrt{2}}" title="Rendered by QuickLaTeX.com" style="vertical-align: -11px;" height="27" width="23">
 without affecting whether or not the solution works). Weakening the 
constraints on the brute force search found the circuits I’m using in 
this article, each using at most 4 gates.</p>
<p>Here’s links to <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy/blob/fe21e15b8b0e34fcd213911c83e8c2cddf7c526d/QuantumPseudoTelepathy/Quantum/Circuits.cs#L59">the code that explores the space of circuits</a>, and the <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy/blob/fe21e15b8b0e34fcd213911c83e8c2cddf7c526d/QuantumPseudoTelepathy/Program.cs#L45">code matching that space against the matrices</a>.</p>
<p>(One interesting question that I haven’t explored much is whether 
there are alternative sets of matrices that correspond to much simpler 
or more enlightening circuits. That’s probably what the Wikipedia 
article was trying to communicate.)</p>
<h3>Entangling Bits</h3>
<p>I’ve mentioned that Alice and Bob need two pairs of entangled bits to
 use as inputs to their circuits. This raises the question: how do they 
generate them?</p>
<p>Well, since we’re already assuming they have the ability to evaluate 
quantum circuits, the simplest way would be to just do it as a quantum 
circuit. It turns out this is really straightforward:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/AoMx3wQ.png" alt="Entangler"></p>
<p>The above diagram shows a circuit. Its input must be the Off,Off 
state. The circuit then applies a Hadamard Gate to the first wire, 
uniformly randomizing it, and Xors the randomized first wire into the 
second wire with a Controlled Not Gate. Now the two wires are in a 
superposition containing every possibility where the wires are in the 
same state. More exactly, the system ends up in the superposition <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex.png" class="ql-img-inline-formula " alt="\frac{1}{\sqrt{2}} \cdot \left(\left|\text{On,On}\right\rangle + \left|\text{Off,Off}\right\rangle\right)" title="Rendered by QuickLaTeX.com" style="vertical-align: -11px;" height="27" width="197"> with each wire corresponding to an entangled qubit (called <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_037.png" class="ql-img-inline-formula " alt="a_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="12" width="15"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_042.png" class="ql-img-inline-formula " alt="a_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="11" width="16"> respectively).</p>
<p>We actually need two pairs entangled qubits, so let’s repeat that same trick twice:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/H9PFrV1.png" alt="Double Entangler"></p>
<p>The output of this circuit is the superposition <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_014.png" class="ql-img-inline-formula " alt="\frac{1}{2} \cdot \left(\left|\text{On,On,On,On}\right\rangle + \left|\text{Off,On,Off,On}\right\rangle + \left|\text{On,Off,On,Off}\right\rangle + \left|\text{Off,Off,Off,Off}\right\rangle\right)" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="22" width="588">. The top two qubits, <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_037.png" class="ql-img-inline-formula " alt="a_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="12" width="15"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_030.png" class="ql-img-inline-formula " alt="b_1" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="14"> (which <em>are not measured yet</em>), go to Alice. The bottom two, <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_042.png" class="ql-img-inline-formula " alt="a_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="11" width="16"> and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_002.png" class="ql-img-inline-formula " alt="b_2" title="Rendered by QuickLaTeX.com" style="vertical-align: -3px;" height="16" width="15"> (did I stress not measuring them yet enough?), go to Bob.</p>
<h3>Playing the Game</h3>
<p>We now have all the components we need in order to understand a full play-through of the game, although the <em>why it wins</em>
 part is still to come. The only thing left to realize is that, because 
the entangled qubits haven’t been measured, Alice and Bob are actually <em>still part of the same circuit</em> when they apply their individual circuits.</p>
<p>The following diagram shows how the game plays out, represented as a quantum logic circuit:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/G4DhUOx.png" alt="Game Play"></p>
<p>The code in the <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy/blob/fe21e15b8b0e34fcd213911c83e8c2cddf7c526d/QuantumPseudoTelepathy/Quantum/PseudoTelepathy.cs#L76">PlayGame function of the PseudoTelepathy class</a> essentially just simulates the above circuit and then measures the result.</p>
<p>The question now is: given this circuit, what is the final state of the system?</p>
<p>Initially, the system is in the <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_031.png" class="ql-img-inline-formula " alt="\left|\text{Off,Off,Off,Off}\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="119"> state. Actually, I’m going to represent that as <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_019.png" class="ql-img-inline-formula " alt="\left|0000\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="44"> to cut down on the amount of text.</p>
<p>Then the two Hadamard and Controlled Not Gates are applied, creating 
two entangled qubits. This places the system into the state <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_025.png" class="ql-img-inline-formula " alt="\left(\left|0000\right\rangle+\left|0101\right\rangle+\left|1010\right\rangle+\left|1111\right\rangle\right)\frac{1}{2}" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="22" width="279">.</p>
<p>Next the two top and bottom wires are fed to the isolated Bob and 
Alice respectively. This does not affect the state of the system.</p>
<p>Penultimately, Bob and Alice each apply their circuits. It doesn’t 
matter what order this happens in (the operations commute because they 
apply to different wires). To represent the effect of the 2-wire 
circuits on the 4-wire system, we use the same trick for going from 1 
wire to 2 wires: tensor product against the identity matrix. Actually, 
since <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_005.png" class="ql-img-inline-formula " alt="(A \otimes I) \cdot (I \otimes B) = A \otimes B" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="201">, we can just tensor product their circuits together.</p>
<p>The state of the system, after applying <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_028.png" class="ql-img-inline-formula " alt="A_{bottom} \otimes B_{left}" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="18" width="114">, is <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_027.png" class="ql-img-inline-formula " alt="\left(i\left|1000\right\rangle - \left|0100\right\rangle - \left|1010\right\rangle + i\left|0110\right\rangle + i\left|0001\right\rangle - \left|1101\right\rangle - \left|0011\right\rangle + i\left|1111\right\rangle\right)" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="578"> times <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_032.png" class="ql-img-inline-formula " alt="\frac{1 - i}{4}" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="22" width="23">.</p>
<p>Finally, Alice and Bob will measure their parts of the system. They 
end up in each state shown in the above superposition with equal 
probability. For example, they could end up in <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_009.png" class="ql-img-inline-formula " alt="\left|1000\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="44"> which is <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_029.png" class="ql-img-inline-formula " alt="\left|00\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="26"> for Alice and <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_010.png" class="ql-img-inline-formula " alt="\left|10\right\rangle" title="Rendered by QuickLaTeX.com" style="vertical-align: -5px;" height="19" width="26"> for Bob. Let’s see how the game plays out in this case.</p>
<p>Since his high wire is On, Bob places a token in the the center cell 
of the indicated column (i.e. he covers the center left cell). Since his
 low wire is Off, he places no token in the top cell. Finally, he places
 a token on the the bottom left cell to correct the fact that he had an 
unpaired token. Alice places no tokens in her center or left-most cells,
 since her high and low wires are respectively Off, and since she placed
 no unpaired token she also places no token in her right-most cell.</p>
<p>Hey, they just won! Bob placed a token on the common cell, the bottom
 left, and Alice didn’t. In fact, if you go through every possible case 
in the final superposition, they’re all winning results. If you’re 
really determined, and try playing on the other possible rows and 
columns, you’ll find that the same thing happens in every single case!</p>
<p>How can this be?</p>
<h3>Matrix Constraints</h3>
<p>Now we get to the meat of how things work. Let’s take a closer look at <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_028.png" class="ql-img-inline-formula " alt="A_{bottom} \otimes B_{left}" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="18" width="114">:</p>
<p><img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/w301EkT.png" alt="Matrix with unimportant rows and columns blanked out"></p>
<p>I’ve obscured almost all of this matrix. Why? Because almost none of 
it matters to the result. Most columns are never used, and most rows 
don’t affect whether or not we have a winning solution.</p>
<p>Note that the input to a circuit, in our case it’s the superposition 
over two pairs of entangled qubits, applies a scale factor to each 
column based on each state’s amplitude. The output superposition is then
 determined by summing across rows. Simplifying a bit, columns=inputs 
and rows=outputs.</p>
<p>We know our circuit’s input is the superposition <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_025.png" class="ql-img-inline-formula " alt="\left(\left|0000\right\rangle+\left|0101\right\rangle+\left|1010\right\rangle+\left|1111\right\rangle\right)\frac{1}{2}" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="22" width="279">.
 This superposition only uses 4 of the 16 possible states (all the 
others have an amplitude of 0). That means all columns, except the four 
columns corresponding to the states in our input superposition, will be 
multiplied by zero. That’s why I’ve obscured them: they don’t affect the
 result. The remaining four columns all contribute equally.</p>
<p>We also know that only some outputs correspond to losing. We don’t 
really care how we win, as long as we don’t lose. It’s fine if the 
amplitudes of winning outputs get scrambled, but the amplitudes of any 
losing output <em>must</em> be zero. Otherwise we don’t have a consistently winning strategy. So the obscured rows actually correspond to the <em>winning</em> outputs, which we don’t care about constraining, and the non-obscured rows are the losing outputs.</p>
<p>Notice that all of the non-obscured rows in the diagram sum out to 
zero (counting only the non-obscured columns). That means that, in this 
case, losing results all get no amplitude. Only winning results get any 
amplitude. Winning is guaranteed. With this in mind, we can stop seeing 
winning in terms of the game and start seeing it in terms of a 
constraint satisfied by the matrix combinations: for each losing row, 
the sum over the four columns that matter must be zero. (Note that the 
positions of the losing rows change based on which matrices are being 
combined, since those correspond to different cases in the game.)</p>
<p>Since we always use the same input, it’s always the same columns that
 matter: the 1st, 6th, 11th, and 16th. We can understand where these 
columns come from by analyzing what the tensor product does when 
combining Alice and Bob’s matrices. The 1st column is the tensor product
 of the 1st column of the matrix chosen by Alice and the 1st column of 
the matrix chosen by Bob. The 6th is the tensor product of the second 
columns, the 11th of the third columns, and the 16th of the fourth 
columns.</p>
<p>The important thing to realize about what I just said is that the 
columns that matter in the 16×16 matrix are generated entirely by 
pairing columns in the same position from the 4×4 matrices Alice and Bob
 use. That means summing across the columns that matter is actually just
 computing the dot product of an Alice row and a Bob row. That allows us
 to rewrite all our not-losing constraints into the form <img src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex_017.png" class="ql-img-inline-formula " alt="A_{row,r=x} \cdot B_{col,r=y} = 0" title="Rendered by QuickLaTeX.com" style="vertical-align: -6px;" height="18" width="171">.</p>
<p>Since we have 9 matrix combinations and 8 losing rows per 
combination, not losing gives us 72 equations that must be satisfied, 
over the 96 complex numbers making up our 6 matrices. Solving that 
system of equations (while also considering other constraints, like 
‘must be unitary’) would allow us to find matrices that constituted a 
pseudo-telepathic solution to the game. The matrices I presented above 
are a particular example of a solution to the system.</p>
<h3>The End</h3>
<p>We’re actually done. All the information required to understand the 
solution has been stated. Implementing (a simulation of) the solution is
 just a matter of multiplying the initial vector against the correct 
matrices and confirming that the result only has amplitude in winning 
states.</p>
<p>The matrices that correspond to the “winning” circuits have the 
property that they transform the initial entangled state in a way that 
gives no amplitude to losing states. That’s all there is to it. The game
 exhibits pseudo-telepathy because the system of constraints the 
matrices must satisfy is solvable when the matrices are unitary (i.e. 
you’re using quantum mechanics) but infeasible when the matrices are <a href="https://en.wikipedia.org/wiki/Stochastic_matrix">stochastic</a> (i.e. classical physics).</p>
<p>Actually, come to think of it, there are still some questions left 
over. For example, there are probably other interesting sets of matrices
 that solve the problem. The six I used are probably not the only ones. 
Are there simpler ones? Ones that correspond to really simple circuits? 
Ones that make it intuitively <em>obvious</em> that the circuits form a 
solution? I don’t know. I’ll leave that to you to find out. (Presumably 
whatever Wikipedia is trying to explain corresponds to a simpler set of 
six matrices.)</p>
<p>You can peruse <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy">my pseudo-telepathy simulating implementation over at github</a>,
 in case you feel anything was left ambiguous. I almost definitely made 
sign errors and endian errors in this post, but I know for a fact that 
the code works. If you clone the repo, open it in visual studio, and run
 it then you should see something like this:</p>
<pre><code>Winning Strategy: Check!
Game:
- Referee picks random row and col.
- Alice is told row and covers 0 or 2 cells in row with 'A' tokens.
- Bob is told col and covers 0 or 2 cells in col with 'B' tokens.
- (They can't communicate, but they can have pre-shared entangled qubits.)
- Alice and Bob win if their common cell has exactly one token on it
- (Without entangled qubits they can't win CONSISTENTLY. Can they do it with???)

Press enter to run a game...

+---------------------------------------------------------------
| Ref picked row = 0, col = 2
|
| Ref tells Alice the row and Bob the col.
| They each pick a circuit and run their qubits through.
| They measure the outputs of their circuits:
| Alice: On On, Bob: On Off
|
| Alice independently places 2 tokens
| Bob independently places 2 tokens
| The result:
|  A  | A  |&gt;B
| ----+----+----
|  -- | -- |
| ----+----+----
|  -- | -- | B
|
+---------------------------------------------------------------
| They Won!
+---------------------------------------------------------------

Press enter to run a game...</code></pre><code>
</code><p><code></code></p>
<p><em>Update: This post had some errata. One of the controlled not 
gates had the wrong associated matrix. Half the circuits were wrong 
because I thought I could get away with not testing my matrix 
multiplication code. I've fixed the issues.</em></p>
<h3>Summary</h3>
<p>Quantum pseudo-telepathy refers to the ability to consistently win 
games that can't be won consistently by players limited to classical 
physics.</p>
<p>Strategies for these games can be understood as quantum logic 
circuits that involve entangled qubits, which can be thought of as being
 equivalent to unitary matrices. Winning can be thought of as 
constraints these matrices must satisfy. Classical strategies are 
limited to stochastic matrices, so sometimes they can't win consistently
 when quantum strategies can.</p>
<p>I wrote <a href="https://github.com/Strilanc/Quantum-Pseudo-Telepathy">code, available on github</a>, that simulates the quantum circuits that solve the game I described in this post.</p>
<p>---</p>
<h3><a href="http://www.reddit.com/r/programming/comments/1mkdo7/implementing_quantum_pseudotelepathy/">Discuss on Reddit</a></h3>
<p>---</p>
<h3>My Twitter: <a href="https://twitter.com/CraigGidney">@CraigGidney</a></h3>
<p>---</p>

<blockquote><p>


</p><div id="disqus_thread"><iframe verticalscrolling="no" horizontalscrolling="no" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/a.htm" style="width: 100% ! important; border: medium none ! important; overflow: hidden ! important; height: 340px ! important;" role="complementary" allowtransparency="true" data-disqus-uid="2" id="dsq2" frameborder="0" scrolling="no" width="100%"></iframe><iframe style="width: 1060px ! important; border: medium none ! important; overflow: hidden ! important; top: 0px ! important; position: fixed ! important; height: 29px ! important; display: none ! important;" role="alert" allowtransparency="true" data-disqus-uid="-indicator-north" id="dsq-indicator-north" frameborder="0" scrolling="no"></iframe><iframe style="width: 1060px ! important; border: medium none ! important; overflow: hidden ! important; bottom: 0px ! important; position: fixed ! important; height: 29px ! important; display: none ! important;" role="alert" allowtransparency="true" data-disqus-uid="-indicator-south" id="dsq-indicator-south" frameborder="0" scrolling="no"></iframe></div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://twistedoakstudios.com/blog/Post6536_implementing-quantum-pseudo-telepathy';
    var disqus_identifier = '6536 http://twistedoakstudios.com/blog/?p=6536';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'twistedoakstudios';
    var disqus_title = "Implementing Quantum Pseudo-Telepathy";
        var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /*
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=6536';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/twistedoakstudios.com\/blog\/Post6536_implementing-quantum-pseudo-telepathy\/trackback"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.74';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>

<h3>
<spacer>
</spacer></h3>

<span style="color:#4A9EC2"><em><br>
Twisted Oak Studios offers consulting and development on high-tech interactive projects. Check out our <a href="http://twistedoakstudios.com/portfolio/">portfolio</a>, or <a href="mailto:contact@twistedoakstudios.com">Give us a shout</a> if you have anything you think some really rad engineers should help you with.<br>
</em></span>
<p></p></blockquote>

<h2 class="endofpage">Archive</h2>
<p></p><ul>
     <li><a href="http://twistedoakstudios.com/blog/Post6536_implementing-quantum-pseudo-telepathy" rel="bookmark" title="Permanent Link to Implementing Quantum Pseudo-Telepathy">Implementing Quantum Pseudo-Telepathy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post6422_turn-on-your-damn-warnings" rel="bookmark" title="Permanent Link to Turn On Your Damn Warnings">Turn On Your Damn Warnings</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5953_big-o-made-trivial" rel="bookmark" title="Permanent Link to Big-O Made Trivial">Big-O Made Trivial</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5268_unfathomable-bugs-7-the-broken-oven" rel="bookmark" title="Permanent Link to Unfathomable Bugs #7: The Broken Oven">Unfathomable Bugs #7: The Broken Oven</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5623_solomonoffs-mad-scientist" rel="bookmark" title="Permanent Link to Solomonoff’s Mad Scientist">Solomonoff’s Mad Scientist</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5753_yearly-blogging-roundup-1" rel="bookmark" title="Permanent Link to Yearly Blogging Roundup #1">Yearly Blogging Roundup #1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5485_what-isnt-a-monad" rel="bookmark" title="Permanent Link to What isn’t a Monad">What isn’t a Monad</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5365_searching-a-sorted-matrix-faster" rel="bookmark" title="Permanent Link to Searching a Sorted Matrix Faster">Searching a Sorted Matrix Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5273_how-to-read-nested-ternary-operators" rel="bookmark" title="Permanent Link to How to Read Nested Ternary Operators">How to Read Nested Ternary Operators</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5204_making-sublime-text-2-jump-to-the-correct-line-with-unity-on-os-x" rel="bookmark" title="Permanent Link to Making Sublime Text 2 Jump to the Correct Line with Unity on OS X">Making Sublime Text 2 Jump to the Correct Line with Unity on OS X</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5096_my-bug-my-bad-4-reading-concurrently" rel="bookmark" title="Permanent Link to My Bug, My Bad #4: Reading Concurrently">My Bug, My Bad #4: Reading Concurrently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5018_whole-api-testing-with-reflection" rel="bookmark" title="Permanent Link to Whole API Testing with Reflection">Whole API Testing with Reflection</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4708_optimizing-a-parser-combinator-into-a-memcpy" rel="bookmark" title="Permanent Link to Optimizing a Parser Combinator into a memcpy">Optimizing a Parser Combinator into a memcpy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4872_dont-treat-paths-like-strings" rel="bookmark" title="Permanent Link to Don’t Treat Paths Like Strings">Don’t Treat Paths Like Strings</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4706_breaking-a-toy-hash-function" rel="bookmark" title="Permanent Link to Breaking a Toy Hash Function">Breaking a Toy Hash Function</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4425_counting-iterators-lazily" rel="bookmark" title="Permanent Link to Counting Iterators Lazily">Counting Iterators Lazily</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4428_unfathomable-bugs-6-pretend-precision" rel="bookmark" title="Permanent Link to Unfathomable Bugs #6: Pretend Precision">Unfathomable Bugs #6: Pretend Precision</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4281_my-bug-my-bad-3-accidentally-attacking-warcraft-3" rel="bookmark" title="Permanent Link to My Bug, My Bad #3: Accidentally Attacking WarCraft 3">My Bug, My Bad #3: Accidentally Attacking WarCraft 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4130_collapsing-types-vs-monads-followup" rel="bookmark" title="Permanent Link to Collapsing Types vs Monads (followup)">Collapsing Types vs Monads (followup)</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4008_collapsing-futures-easy-to-use-hard-to-represent" rel="bookmark" title="Permanent Link to Collapsing Futures: Easy to Use, Hard to Represent">Collapsing Futures: Easy to Use, Hard to Represent</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3858_eventual-exceptions-vs-programming-in-a-minimal-functional-style" rel="bookmark" title="Permanent Link to Eventual Exceptions vs Programming in a Minimal Functional Style">Eventual Exceptions vs Programming in a Minimal Functional Style</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3769_the-mystery-of-flunf" rel="bookmark" title="Permanent Link to The Mystery of Flunf">The Mystery of Flunf</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3724_explain-it-like-im-five-the-socialist-millionaire-problem-and-secure-multi-party-computation" rel="bookmark" title="Permanent Link to Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation">Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3631_computer-science-blows-my-mind" rel="bookmark" title="Permanent Link to Computer Science Blows My Mind">Computer Science Blows My Mind</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3484_a-visit-to-execution-labs-in-montreal" rel="bookmark" title="Permanent Link to A visit to Execution Labs in Montréal">A visit to Execution Labs in Montréal</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3573_transmuting-dice-conserving-entropy" rel="bookmark" title="Permanent Link to Transmuting Dice, Conserving Entropy">Transmuting Dice, Conserving Entropy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3516_rule-of-thumb-ask-for-the-clock" rel="bookmark" title="Permanent Link to Rule of Thumb: Ask for the Clock">Rule of Thumb: Ask for the Clock</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3477_rule-of-thumb-use-purposefully-weakened-methods" rel="bookmark" title="Permanent Link to Rule of Thumb: Use Purposefully Weakened Methods">Rule of Thumb: Use Purposefully Weakened Methods</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3376_rule-of-thumb-preconditions-should-be-checked-explicitly" rel="bookmark" title="Permanent Link to Rule of thumb: Preconditions Should be Checked Explicitly">Rule of thumb: Preconditions Should be Checked Explicitly</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3280_intersecting-linked-lists-faster" rel="bookmark" title="Permanent Link to Intersecting Linked Lists Faster">Intersecting Linked Lists Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3138_mouse-path-smoothing-for-jack-lumber" rel="bookmark" title="Permanent Link to Mouse Path Smoothing for Jack Lumber">Mouse Path Smoothing for Jack Lumber</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3044_my-bug-my-bad-2-sunk-by-float" rel="bookmark" title="Permanent Link to My Bug, My Bad #2: Sunk by Float">My Bug, My Bad #2: Sunk by Float</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2852_repeat-yourself-differently" rel="bookmark" title="Permanent Link to Repeat Yourself Differently">Repeat Yourself Differently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm" rel="bookmark" title="Permanent Link to Grover’s Quantum Search Algorithm">Grover’s Quantum Search Algorithm</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2766_followup-to-non-nullable-types-vs-c" rel="bookmark" title="Permanent Link to Followup to Non-Nullable Types vs C#">Followup to Non-Nullable Types vs C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2540_optimizing-just-in-time-with-expression-trees" rel="bookmark" title="Permanent Link to Optimizing Just in Time with Expression Trees">Optimizing Just in Time with Expression Trees</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2353_when-one-way-latency-doesnt-matter" rel="bookmark" title="Permanent Link to When One-Way Latency Doesn’t Matter">When One-Way Latency Doesn’t Matter</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2194_determining-exactly-ifwhenwhere-a-moving-line-intersected-a-moving-point" rel="bookmark" title="Permanent Link to Determining exactly if/when/where a moving line intersected a moving point">Determining exactly if/when/where a moving line intersected a moving point</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2061_emulating-actors-in-c-with-asyncawait" rel="bookmark" title="Permanent Link to Emulating Actors in C# with Async/Await">Emulating Actors in C# with Async/Await</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2096_making-an-immutable-queue-with-guaranteed-constant-time-operations" rel="bookmark" title="Permanent Link to Making an immutable queue with guaranteed constant time operations">Making an immutable queue with guaranteed constant time operations</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post399_improving-checked-exceptions" rel="bookmark" title="Permanent Link to Improving Checked Exceptions">Improving Checked Exceptions</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1941_perishable-collections-the-benefits-of-removal-by-lifetime" rel="bookmark" title="Permanent Link to Perishable Collections: The Benefits of Removal-by-Lifetime">Perishable Collections: The Benefits of Removal-by-Lifetime</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1823_decoupling-shared-control" rel="bookmark" title="Permanent Link to Decoupling shared control">Decoupling shared control</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1694_decoupling-inlined-ui-code" rel="bookmark" title="Permanent Link to Decoupling inlined UI code">Decoupling inlined UI code</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1585_linq-to-collections-beyond-ienumerablet" rel="bookmark" title="Permanent Link to Linq to Collections: Beyond IEnumerable&lt;T&gt;">Linq to Collections: Beyond IEnumerable&lt;T&gt;</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1295_publish-your-net-library-as-a-nuget-package" rel="bookmark" title="Permanent Link to Publish your .Net library as a NuGet package">Publish your .Net library as a NuGet package</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1130_when-null-is-not-enough-an-option-type-for-c" rel="bookmark" title="Permanent Link to When null is not enough: an option type for C#">When null is not enough: an option type for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1473_unfathomable-bugs-5-readonly-or-not" rel="bookmark" title="Permanent Link to Unfathomable Bugs #5: Readonly or not">Unfathomable Bugs #5: Readonly or not</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post667_minkowski-sums-examples" rel="bookmark" title="Permanent Link to Minkowski sums: examples">Minkowski sums: examples</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1080_my-bug-my-bad-1-fractal-spheres" rel="bookmark" title="Permanent Link to My Bug, My Bad #1: Fractal Spheres">My Bug, My Bad #1: Fractal Spheres</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1007_working-around-the-brittle-ui-virtualization-in-windows-8" rel="bookmark" title="Permanent Link to Working around the brittle UI Virtualization in Windows 8">Working around the brittle UI Virtualization in Windows 8</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post938_encapsulating-angles" rel="bookmark" title="Permanent Link to Encapsulating Angles">Encapsulating Angles</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post925_unfathomable-bugs-4-keys-that-arent" rel="bookmark" title="Permanent Link to Unfathomable Bugs #4: Keys that aren’t">Unfathomable Bugs #4: Keys that aren’t</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post867_how-would-i-even-use-a-monad-in-c" rel="bookmark" title="Permanent Link to How would I even use a monad (in C#)?">How would I even use a monad (in C#)?</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post822_useful-methods-1-observable-wheneach" rel="bookmark" title="Permanent Link to Useful/Interesting Methods #1: Observable.WhenEach">Useful/Interesting Methods #1: Observable.WhenEach</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post818_unfathomable-bugs-3-stringing-you-along" rel="bookmark" title="Permanent Link to Unfathomable Bugs #3: Stringing you along">Unfathomable Bugs #3: Stringing you along</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post774_anonymous-implementation-classes-a-design-pattern-for-c" rel="bookmark" title="Permanent Link to Anonymous Implementation Classes – A Design Pattern for C#">Anonymous Implementation Classes – A Design Pattern for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post532_tasks-for-action-script-3" rel="bookmark" title="Permanent Link to Tasks for ActionScript 3 – Improving on Event-Driven Programming">Tasks for ActionScript 3 – Improving on Event-Driven Programming</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post554_minkowski-sums-and-differences" rel="bookmark" title="Permanent Link to Minkowski sums and differences">Minkowski sums and differences</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post330_non-nullable-types-vs-c-fixing-the-billion-dollar-mistake" rel="bookmark" title="Permanent Link to Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake">Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post384_unfathomable-bugs-2-slashing-out" rel="bookmark" title="Permanent Link to Unfathomable Bugs #2: Slashing Out">Unfathomable Bugs #2: Slashing Out</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post404_script-templates-and-base-classes" rel="bookmark" title="Permanent Link to Script templates and base classes">Script templates and base classes</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post373_unity-font-extraction" rel="bookmark" title="Permanent Link to Unity font extraction">Unity font extraction</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post341_abusing-phantom-types-to-encode-list-lengths-into-their-type" rel="bookmark" title="Permanent Link to Abusing “Phantom Types” to Encode List Lengths Into Their Type">Abusing “Phantom Types” to Encode List Lengths Into Their Type</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post261_constructive-criticism-of-the-reactive-extensions-api" rel="bookmark" title="Permanent Link to Constructive Criticism of the Reactive Extensions API">Constructive Criticism of the Reactive Extensions API</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post241_quaternions-part-3-2" rel="bookmark" title="Permanent Link to Quaternions part 3">Quaternions part 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post204_quaternions-part-2" rel="bookmark" title="Permanent Link to Quaternions part 2">Quaternions part 2</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post144_quaternions-part-1" rel="bookmark" title="Permanent Link to Quaternions part 1">Quaternions part 1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post157_unfathomable-bugs-1-you-can-have-things-you-can-have-things-in-things-you-can-have" rel="bookmark" title="Permanent Link to Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …">Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know" rel="bookmark" title="Permanent Link to Coroutines – More than you want to know">Coroutines – More than you want to know</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post74_asset-bundle-helper" rel="bookmark" title="Permanent Link to Asset Bundle Helper">Asset Bundle Helper</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post60_the-visual-studio-goes-away" rel="bookmark" title="Permanent Link to The Visual Studio goes away">The Visual Studio goes away</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post57_nets-time-traveling-stopwatch" rel="bookmark" title="Permanent Link to .Net’s time traveling StopWatch">.Net’s time traveling StopWatch</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post29_introducing-catalyst" rel="bookmark" title="Permanent Link to Introducing Catalyst">Introducing Catalyst</a></li>
  </ul>
<p></p>


			</div><!-- #content -->
			</section>

			</div>
		</div><!-- #container -->


</span></div><!-- .container -->

 <div id="upprev_box" style="right: -400px;">
	<h6>
		More interesting posts <span class="num"> (1 of 20 articles)</span>
	</h6>
	<div class="upprev_excerpt">
		<p>
			<a href="http://twistedoakstudios.com/blog/Post5485_what-isnt-a-monad" rel="prev">What isn’t a Monad</a>
		</p>
	</div>
	
		<p>
Or check out our <a href="http://twistedoakstudios.com/portfolio">Portfolio</a>.		</p><button id="upprev_close" type="button">Close</button>
</div><!-- #upprev_box -->
<link rel="stylesheet" id="al2fb_style-css" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/add-link-to-facebook.css" type="text/css" media="all">
<link rel="stylesheet" id="admin-bar-css" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/admin-bar.css" type="text/css" media="all">
<link rel="stylesheet" id="upprev-css-css" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/upprev.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-quicklatex-format-css" href="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/quicklatex-format.css" type="text/css" media="all">
<script type="text/javascript" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/admin-bar.js"></script>
<script type="text/javascript" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/jquery_002.js"></script>
<script type="text/javascript" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/upprev_js.php"></script>
<script type="text/javascript" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/comment-reply.js"></script>
	<script type="text/javascript">
		(function() {
			var request, b = document.body, c = 'className', cs = 'customize-support', rcs = new RegExp('(^|\\s+)(no-)?'+cs+'(\\s+|$)');

			request = true;

			b[c] = b[c].replace( rcs, ' ' );
			b[c] += ( window.postMessage && request ? ' ' : ' no-' ) + cs;
		}());
	</script>
			

		 
<!-- BEGIN footer-type stuff -->
<div class="container footer-container">
	<div class="row">
		
		<div class="fourcol last"><!-- .last b/c it's floated right -->
      <!-- home portfolio used to be here -->
		</div>

		<div class="eightcol" id="contact">
			<p>Twisted Oak Studios<br>
				138-1657 Barrington St.<br>
				Halifax, NS, Canada B3J 2A1</p>
			
			<p>001-902-237-7326<br>
			<a href="mailto:contact@twistedoakstudios.com">contact@twistedoakstudios.com</a></p>
		</div>

		<div class="twelvecol">
			<footer>
				<small>©2012
					<script>
						var d=new Date(); 
						yr=d.getFullYear();
						if (yr!=2012)
						document.write("- "+yr);
					</script>- 2013 Twisted Oak Studios Ltd. -- All Rights Reserved -- All images and logos are property of their respective owners.
				</small>
			</footer>
		</div>
		
		
	</div><!-- .row -->
</div><!-- .container -->
<!-- END footer stuff-->

<!-- jQuery and scrolly script for contact link -->
<script src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/jquery.js"></script>
  <script>window.jQuery || document.write('<script src="../js/libs/jquery-1.6.2.min.js"><\/script>')</script>

<script src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/scrolly.js"></script>


  <!-- Don't forget Analytics! -->



  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 7 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script>
    <script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script>
  <![endif]-->
  


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-31441525-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<div id="wpadminbar" class="nojq " role="navigation">
			<a class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a>
			<div class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Top navigation toolbar." tabindex="0">
				<ul id="wp-admin-bar-root-default" class="ab-top-menu">
		<li id="wp-admin-bar-wp-logo" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/about.php" title="About WordPress"><span class="ab-icon"></span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-wp-logo-default" class="ab-submenu">
		<li id="wp-admin-bar-about"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/about.php">About WordPress</a>		</li></ul><ul id="wp-admin-bar-wp-logo-external" class="ab-sub-secondary ab-submenu">
		<li id="wp-admin-bar-wporg"><a class="ab-item" href="http://wordpress.org/">WordPress.org</a>		</li>
		<li id="wp-admin-bar-documentation"><a class="ab-item" href="http://codex.wordpress.org/">Documentation</a>		</li>
		<li id="wp-admin-bar-support-forums"><a class="ab-item" href="http://wordpress.org/support/">Support Forums</a>		</li>
		<li id="wp-admin-bar-feedback"><a class="ab-item" href="http://wordpress.org/support/forum/requests-and-feedback">Feedback</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-site-name" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/">Twisted Oak Studios Blog</a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-site-name-default" class="ab-submenu">
		<li id="wp-admin-bar-dashboard"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/">Dashboard</a>		</li></ul><ul id="wp-admin-bar-appearance" class="ab-submenu">
		<li id="wp-admin-bar-themes"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/themes.php">Themes</a>		</li>
		<li id="wp-admin-bar-customize" class="hide-if-no-customize"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/customize.php?url=http%3A%2F%2Ftwistedoakstudios.com%2Fblog%2FPost6536_implementing-quantum-pseudo-telepathy">Customize</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-updates"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/update-core.php" title="3 Plugin Updates, 3 Theme Updates"><span class="ab-icon"></span><span class="ab-label">6</span><span class="screen-reader-text">3 Plugin Updates, 3 Theme Updates</span></a>		</li>
		<li id="wp-admin-bar-comments"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/edit-comments.php" title="0 comments awaiting moderation"><span class="ab-icon"></span><span id="ab-awaiting-mod" class="ab-label awaiting-mod pending-count count-0">0</span></a>		</li>
		<li id="wp-admin-bar-new-content" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php" title="Add New"><span class="ab-icon"></span><span class="ab-label">New</span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-new-content-default" class="ab-submenu">
		<li id="wp-admin-bar-new-post"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php">Post</a>		</li>
		<li id="wp-admin-bar-new-media"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/media-new.php">Media</a>		</li>
		<li id="wp-admin-bar-new-link"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/link-add.php">Link</a>		</li>
		<li id="wp-admin-bar-new-page"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php?post_type=page">Page</a>		</li>
		<li id="wp-admin-bar-new-user"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/user-new.php">User</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-edit"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post.php?post=6536&amp;action=edit">Edit Post</a>		</li></ul><ul id="wp-admin-bar-top-secondary" class="ab-top-secondary ab-top-menu">
		<li id="wp-admin-bar-search" class="admin-bar-search"><div class="ab-item ab-empty-item" tabindex="-1"><form action="http://twistedoakstudios.com/blog/" method="get" id="adminbarsearch"><input class="adminbar-input" name="s" id="adminbar-search" maxlength="150" type="text"><input class="adminbar-button" value="Search" type="submit"></form></div>		</li>
		<li id="wp-admin-bar-my-account" class="menupop with-avatar"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/profile.php" title="My Account">Howdy, Craig Gidney<img alt="" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/31a6ce579f8f9f9d528715d1e941726e.png" class="avatar avatar-16 photo" height="16" width="16"></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-user-actions" class="ab-submenu">
		<li id="wp-admin-bar-user-info"><a class="ab-item" tabindex="-1" href="http://twistedoakstudios.com/blog/wp-admin/profile.php"><img alt="" src="Implementing%20Quantum%20Pseudo-Telepathy%20%28Updated%29_files/31a6ce579f8f9f9d528715d1e941726e_002.png" class="avatar avatar-64 photo" height="64" width="64"><span class="display-name">Craig Gidney</span><span class="username">craig</span></a>		</li>
		<li id="wp-admin-bar-edit-profile"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/profile.php">Edit My Profile</a>		</li>
		<li id="wp-admin-bar-logout"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=e4e9247d22">Log Out</a>		</li></ul></div>		</li></ul>			</div>
			<a class="screen-reader-shortcut" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=e4e9247d22">Log Out</a>
		</div></body></html>