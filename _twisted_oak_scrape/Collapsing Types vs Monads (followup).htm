<!DOCTYPE html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!-- Consider adding an manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en"><script>var urchinTracker=function(){},_gaq={push:function(){try {if(arguments[0][0]=='_link')window.location.href=arguments[0][1]}catch(er){}}},_gat={_createTracker:function(){}, _getTracker:function(){return{__noSuchMethod__:function(){},_link:function(o){if(o)location.href=o;},_linkByPost:function(){return true;},_getLinkerUrl:function(o){return o;},_trackEvent:function(){}}}};</script><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
   <!-- blog feed link -->
  <link href="http://twistedoakstudios.com/blog/?feed=rss" rel="alternate" type="application/rss+xml" title="Twisted Oak Studios Blog">

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/b/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title>Twisted Oak Studios | Unity3D Consulting | Technical Magic</title>
  <meta name="description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  <meta name="author" content="/humans.txt">

  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link rel="shortcut icon" href="http://twistedoakstudios.com/blog/favicon.ico">
  <link rel="apple-touch-icon-precomposed" href="http://twistedoakstudios.com/blog/apple-touch-icon-precomposed.png">

  	<!-- The 1140px Grid - http://cssgrid.net/ -->
	<link rel="stylesheet" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/1140.css">
    <link rel="stylesheet" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/style.css">
    <link rel="stylesheet" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/blogstyle.css">
<link rel="stylesheet" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/prettify.css" media="all">
<link rel="stylesheet" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/sunburst.css" media="all">
<script type="text/javascript" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/prettify.js"></script>

	<!-- Webfonts! -->
	<link href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/css.css" rel="stylesheet" type="text/css">

	<!-- Open Graph -->
	<meta property="og:title" content="Twisted Oak Studios">
	<meta property="og:type" content="company">
	<meta property="og:url" content="http://www.twistedoakstudios.com/">
	<meta property="og:image" content="http://www.twistedoakstudios.com/images/logo.png">
	<meta property="og:description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  
  <script src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/modernizr-2.js"></script>
</head>
<body class=" customize-support" onload="prettyPrint()">
<!-- begin header -->
<div class="container header-container">
	<div class="row">
		<header>
			<div class="threecol">
				<a href="#"><img class="logo" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/logo.png"></a>
			</div><!-- .threecol -->
		
			<div class="fourcol navcol">
				<nav>
					<ul class="primary-nav clearfix">
						<li><a href="http://twistedoakstudios.com/">Home</a></li>
						<li><a href="http://twistedoakstudios.com/portfolio/">Portfolio</a></li>
						<li><a href="http://twistedoakstudios.com/labs/">Labs</a></li>
						<li><a class="scroll" href="#contact">Contact</a></li>
						<li><a href="http://twistedoakstudios.com/blog/">Blog</a></li>
					</ul>
				</nav>
			</div>    

    	</header>
	</div><!-- .row -->
</div><!-- .container -->


	<div id="main">
<span class="blog">
<div class="container home-container" id="home">
	<div class="row">
    <p class="big-callout">We're hiring! Experience with Game Dev, Unity3D, Graphics, Signal Processing, or Networking? Eligible to work in Canada? 
      <a href="http://www.twistedoakstudios.com/jobs.php">Check it out</a>!

    </p>
		<section>
			
			<div class="ninecol">


<h2><a href="http://twistedoakstudios.com/blog/Post4130_collapsing-types-vs-monads-followup" rel="bookmark" title="Permanent Link to Collapsing Types vs Monads (followup)">Collapsing Types vs Monads (followup)</a></h2>
<div class="meta">posted by Craig Gidney on June 4, 2013</div>

<p><a href="http://twistedoakstudios.com/blog/Post4008_collapsing-futures-easy-to-use-hard-to-represent">Last week’s post</a>
 about an automatically flattening future type received a lot of 
feedback. One of the running themes in the discussion was how collapsing
 types relate to monads:</p>
<blockquote><p>“Type operators that collapse when you nest them inside 
of themselves”, along with some conditions to actually work as you would
 expect, precisely describe the idea of monad.<br>
</p><footer>gasche</footer>
</blockquote>
<blockquote><p>[...] This is the textbook definition of a monad.<br>
</p><footer>PasswordIsntHAMSTER</footer>
</blockquote>
<blockquote><p>monads, anyone?<br>
</p><footer>cheng81</footer>
</blockquote>
<blockquote><p>So the article and discussion here bring up a key question: what are the monads such that m (m a) and m a are isomorphic?<br>
</p><footer>sacundim</footer>
</blockquote>
<p>Given the mix of confusion and interest, I want to clear up how monads relate to collapsing types.</p>
<h3>Different</h3>
<p>Collapsing types aren’t the same thing as monads, and neither is a 
subset of the other. They are attributes that can apply independently.</p>
<p>A collapsing type is a type that satisfies the property that nesting it inside itself has no effect. A <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_022.png" class="ql-img-inline-formula " alt="Foo^{*}(Foo^{*}(T))" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="117"> must act identically to a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_012.png" class="ql-img-inline-formula " alt="Foo^{*}(T)" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="64"> under all circumstances, for <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_020.png" class="ql-img-inline-formula " alt="Foo^{*}" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="38"> to be a collapsing type.</p>
<p>A monad is <a href="http://en.wikipedia.org/wiki/Monad_%28functional_programming%29#fmap_and_join">a type that supports three operations</a>: wrapping, transforming, and flattening (more typically called <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_004.png" class="ql-img-inline-formula " alt="return" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="53">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_008.png" class="ql-img-inline-formula " alt="fmap" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="45">, and <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_015.png" class="ql-img-inline-formula " alt="join" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="35"> respectively). The operations must also satisfy a few work-in-the-obvious-way-please rules.</p>
<p>If you tell me that <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_020.png" class="ql-img-inline-formula " alt="Foo^{*}" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="38"> is a collapsing type, I still don’t know if the type supports the operations necessary to make it a monad. Collapsing types <em>technically</em> support flattening, in that a proper <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_015.png" class="ql-img-inline-formula " alt="join" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="35"> method doesn’t have to make any changes. However, collapsing types are not required to support wrapping or transforming.</p>
<p>Conversely, if you tell me that <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_023.png" class="ql-img-inline-formula " alt="Bar" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="31"> is a monadic type, I still don’t know if it satisfies the condition <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_016.png" class="ql-img-inline-formula " alt="join_{Bar} = IdentityFunction" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="224"> needed to qualify it as a collapsing type. Monads are not required to have <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_015.png" class="ql-img-inline-formula " alt="join" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="35"> operations that change nothing.</p>
<h3>Examples</h3>
<p>There are non-collapsing non-monadic types, collapsing non-monadic 
types, non-collapsing monadic types, and collapsing monadic types. Just 
to really drive home that “collapsing” is separate from “monadic”, lets 
go over an example of each.</p>
<p>An example of a collapsing monadic type is <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_006.png" class="ql-img-inline-formula " alt="Future^{*}" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="63">, from last week’s post.</p>
<p>An example of a non-collapsing monadic type is <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_021.png" class="ql-img-inline-formula " alt="List" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="32">. You can wrap anything into a list, transform the items in a list, and flatten lists of lists <em>but</em> a list of lists of integers is not the same as a list of integers.</p>
<p>An example of a collapsing non-monadic type is a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_024.png" class="ql-img-inline-formula " alt="Remote" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="61">
 type representing an unknown value stored on a remote server, where the
 details of the server potentially using a further-remote server are 
hidden (meaning you treat a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_005.png" class="ql-img-inline-formula " alt="Remote(Remote(T))" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="161"> exactly like a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_013.png" class="ql-img-inline-formula " alt="Remote(T)" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="86">). If the server doesn’t allow you to apply arbitrary operations to remote values, or create arbitrary remote values, then <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_024.png" class="ql-img-inline-formula " alt="Remote" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="61"> is not a monad.</p>
<p>An example of a non-collapsing non-monadic type is <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_014.png" class="ql-img-inline-formula " alt="SquareMatrix" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="116">.
 It’s not a collapsible type, because a matrix of matrices of booleans 
is distinct from a matrix of booleans. It’s not a monad unless you 
specify a flattening operation, but you’ll find there aren’t any nice 
ones to pick because you can’t preserve the number of values. For 
example, properly flattening <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_019.png" class="ql-img-inline-formula " alt="\left| \begin{array}{cc} \left| 0 \right| &amp; \left| 1 \right| \\ \left| \begin{array}{cc} 2 &amp; 3 \\ 4 &amp; 5 \end{array} \right| &amp; \left| 6 \right| \end{array} \right|" title="Rendered by QuickLaTeX.com" style="vertical-align: -28px;" height="65" width="121"> would require that seven be a square number (it’s not).</p>
<p><span style="font-size:x-small;"><em>Side note</em>: <em>Technically</em>
 you could make SquareMatrix into a monad by specifying a poor 
flattening operator, and so you might be tempted to say SquareMatrix is a
 monad. Don’t do it. Under that view, every type ever is a monad. Given a
 type T, you can make it a useless monad by picking a value v of type T 
and defining join, fmap and return to all unconditionally return v.</span></p>
<h3>Similar</h3>
<p>Monads and collapsing types are different, but still related.</p>
<p><em>In practice</em>, collapsing types you encounter will probably be monads. Mainly because most of them will be related to eventual results (e.g. <a href="https://github.com/promises-aplus/promises-spec">promises/A+</a> in JavaScript, <a href="http://twistedmatrix.com/trac/">Twisted Python</a> in Python, <a href="http://msdn.microsoft.com/en-us/library/windows/apps/hh780559.aspx">ppltasks for windows store apps</a> in C++).</p>
<p><em>In theory</em>, you can start from any monad <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_025.png" class="ql-img-inline-formula " alt="Foo" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="32"> (which may not be a collapsing type)  and <em>derive</em> a related collapsing+monadic type <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_020.png" class="ql-img-inline-formula " alt="Foo^{*}" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="38"> by making the application of <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_015.png" class="ql-img-inline-formula " alt="join" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="16" width="35"> automatic. It’s what I did with <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_010.png" class="ql-img-inline-formula " alt="Future" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="57"> last week. All the methods on <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_006.png" class="ql-img-inline-formula " alt="Future^{*}" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="63"> did internal checks to see if flattening was necessary or not, to make a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_009.png" class="ql-img-inline-formula " alt="Future^{*}(Future^{*}(T))" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="170"> act exactly like a <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex.png" class="ql-img-inline-formula " alt="Future^{*}(T)" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="18" width="91">. This derivation makes more practical sense with some types (<img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_010.png" class="ql-img-inline-formula " alt="Future" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="57">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_017.png" class="ql-img-inline-formula " alt="MayHaveFailed" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="134">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_003.png" class="ql-img-inline-formula " alt="Observable" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="87">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_011.png" class="ql-img-inline-formula " alt="MayHaveCancelled" title="Rendered by QuickLaTeX.com" style="vertical-align: -4px;" height="17" width="160">) than it does with others (<img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_018.png" class="ql-img-inline-formula " alt="Nullable" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="13" width="68">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_021.png" class="ql-img-inline-formula " alt="List" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="32">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_007.png" class="ql-img-inline-formula " alt="Tree" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="37">, <img src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex_002.png" class="ql-img-inline-formula " alt="Parser" title="Rendered by QuickLaTeX.com" style="vertical-align: 0px;" height="12" width="56">).</p>
<p>Warning: a potential issue with the above derivation is the creation 
of self-referencing flattening cycles, where you end up with a type 
nested inside itself infinitely many times and keep trying to unwrap it.
 For example, adding the following three lines to my <a href="http://pythonfiddle.com/collapsing-future-demo/">collapsing future’s python fiddle</a> causes a flattening cycle:</p>
<pre><code class="prettyprint"><span class="pln">cycle </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Future</span><span class="pun">()</span><span class="pln">
cycle</span><span class="pun">.</span><span class="pln">trySetResult</span><span class="pun">(</span><span class="pln">cycle</span><span class="pun">)</span><span class="pln">
cycle</span><span class="pun">.</span><span class="pln">continueWith</span><span class="pun">(</span><span class="kwd">out</span><span class="pun">)</span><span class="pln"> </span><span class="com">#never halts</span></code></pre>
<p>It’s probably a good idea to have runtime checks for this issue. 
Compile-time checks would be even better, but beware accidentally 
solving the halting problem.</p>
<h3>Summary</h3>
<p>Collapsing types are not the same thing as monads.</p>
<p>You can transform any monadic type into a collapsing monadic type.</p>
<p>Next week: less type theory.</p>
<p>—</p>
<h3>Discuss on <a href="http://www.reddit.com/r/programming/comments/1fn0zi/collapsing_types_vs_monads_followup_to_collapsing/">Reddit</a></h3>
<p>—</p>

<blockquote><p>
<span style="color:#4A9EC2"><em><br>
Twisted Oak Studios offers consulting and development on high-tech interactive projects. Check out our <a href="http://twistedoakstudios.com/portfolio/">portfolio</a>, or <a href="mailto:contact@twistedoakstudios.com">Give us a shout</a> if you have anything you think some really rad engineers should help you with.<br>
</em></span>
</p></blockquote>
<h2 class="endofpage">Older Posts</h2>
<p></p><ul>
     <li><a href="http://twistedoakstudios.com/blog/Post5365_searching-a-sorted-matrix-faster" rel="bookmark" title="Permanent Link to Searching a Sorted Matrix Faster">Searching a Sorted Matrix Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5273_how-to-read-nested-ternary-operators" rel="bookmark" title="Permanent Link to How to Read Nested Ternary Operators">How to Read Nested Ternary Operators</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5204_making-sublime-text-2-jump-to-the-correct-line-with-unity-on-os-x" rel="bookmark" title="Permanent Link to Making Sublime Text 2 Jump to the Correct Line with Unity on OS X">Making Sublime Text 2 Jump to the Correct Line with Unity on OS X</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5096_my-bug-my-bad-4-reading-concurrently" rel="bookmark" title="Permanent Link to My Bug, My Bad #4: Reading Concurrently">My Bug, My Bad #4: Reading Concurrently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5018_whole-api-testing-with-reflection" rel="bookmark" title="Permanent Link to Whole API Testing with Reflection">Whole API Testing with Reflection</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4708_optimizing-a-parser-combinator-into-a-memcpy" rel="bookmark" title="Permanent Link to Optimizing a Parser Combinator into a memcpy">Optimizing a Parser Combinator into a memcpy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4872_dont-treat-paths-like-strings" rel="bookmark" title="Permanent Link to Don’t Treat Paths Like Strings">Don’t Treat Paths Like Strings</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4706_breaking-a-toy-hash-function" rel="bookmark" title="Permanent Link to Breaking a Toy Hash Function">Breaking a Toy Hash Function</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4425_counting-iterators-lazily" rel="bookmark" title="Permanent Link to Counting Iterators Lazily">Counting Iterators Lazily</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4428_unfathomable-bugs-6-pretend-precision" rel="bookmark" title="Permanent Link to Unfathomable Bugs #6: Pretend Precision">Unfathomable Bugs #6: Pretend Precision</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4281_my-bug-my-bad-3-accidentally-attacking-warcraft-3" rel="bookmark" title="Permanent Link to My Bug, My Bad #3: Accidentally Attacking WarCraft 3">My Bug, My Bad #3: Accidentally Attacking WarCraft 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4008_collapsing-futures-easy-to-use-hard-to-represent" rel="bookmark" title="Permanent Link to Collapsing Futures: Easy to Use, Hard to Represent">Collapsing Futures: Easy to Use, Hard to Represent</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3858_eventual-exceptions-vs-programming-in-a-minimal-functional-style" rel="bookmark" title="Permanent Link to Eventual Exceptions vs Programming in a Minimal Functional Style">Eventual Exceptions vs Programming in a Minimal Functional Style</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3769_the-mystery-of-flunf" rel="bookmark" title="Permanent Link to The Mystery of Flunf">The Mystery of Flunf</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3724_explain-it-like-im-five-the-socialist-millionaire-problem-and-secure-multi-party-computation" rel="bookmark" title="Permanent Link to Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation">Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3631_computer-science-blows-my-mind" rel="bookmark" title="Permanent Link to Computer Science Blows My Mind">Computer Science Blows My Mind</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3484_a-visit-to-execution-labs-in-montreal" rel="bookmark" title="Permanent Link to A visit to Execution Labs in Montréal">A visit to Execution Labs in Montréal</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3573_transmuting-dice-conserving-entropy" rel="bookmark" title="Permanent Link to Transmuting Dice, Conserving Entropy">Transmuting Dice, Conserving Entropy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3516_rule-of-thumb-ask-for-the-clock" rel="bookmark" title="Permanent Link to Rule of Thumb: Ask for the Clock">Rule of Thumb: Ask for the Clock</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3477_rule-of-thumb-use-purposefully-weakened-methods" rel="bookmark" title="Permanent Link to Rule of Thumb: Use Purposefully Weakened Methods">Rule of Thumb: Use Purposefully Weakened Methods</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3376_rule-of-thumb-preconditions-should-be-checked-explicitly" rel="bookmark" title="Permanent Link to Rule of thumb: Preconditions Should be Checked Explicitly">Rule of thumb: Preconditions Should be Checked Explicitly</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3280_intersecting-linked-lists-faster" rel="bookmark" title="Permanent Link to Intersecting Linked Lists Faster">Intersecting Linked Lists Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3138_mouse-path-smoothing-for-jack-lumber" rel="bookmark" title="Permanent Link to Mouse Path Smoothing for Jack Lumber">Mouse Path Smoothing for Jack Lumber</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3044_my-bug-my-bad-2-sunk-by-float" rel="bookmark" title="Permanent Link to My Bug, My Bad #2: Sunk by Float">My Bug, My Bad #2: Sunk by Float</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2852_repeat-yourself-differently" rel="bookmark" title="Permanent Link to Repeat Yourself Differently">Repeat Yourself Differently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm" rel="bookmark" title="Permanent Link to Grover’s Quantum Search Algorithm">Grover’s Quantum Search Algorithm</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2766_followup-to-non-nullable-types-vs-c" rel="bookmark" title="Permanent Link to Followup to Non-Nullable Types vs C#">Followup to Non-Nullable Types vs C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2540_optimizing-just-in-time-with-expression-trees" rel="bookmark" title="Permanent Link to Optimizing Just in Time with Expression Trees">Optimizing Just in Time with Expression Trees</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2353_when-one-way-latency-doesnt-matter" rel="bookmark" title="Permanent Link to When One-Way Latency Doesn’t Matter">When One-Way Latency Doesn’t Matter</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2194_determining-exactly-ifwhenwhere-a-moving-line-intersected-a-moving-point" rel="bookmark" title="Permanent Link to Determining exactly if/when/where a moving line intersected a moving point">Determining exactly if/when/where a moving line intersected a moving point</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2061_emulating-actors-in-c-with-asyncawait" rel="bookmark" title="Permanent Link to Emulating Actors in C# with Async/Await">Emulating Actors in C# with Async/Await</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2096_making-an-immutable-queue-with-guaranteed-constant-time-operations" rel="bookmark" title="Permanent Link to Making an immutable queue with guaranteed constant time operations">Making an immutable queue with guaranteed constant time operations</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post399_improving-checked-exceptions" rel="bookmark" title="Permanent Link to Improving Checked Exceptions">Improving Checked Exceptions</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1941_perishable-collections-the-benefits-of-removal-by-lifetime" rel="bookmark" title="Permanent Link to Perishable Collections: The Benefits of Removal-by-Lifetime">Perishable Collections: The Benefits of Removal-by-Lifetime</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1823_decoupling-shared-control" rel="bookmark" title="Permanent Link to Decoupling shared control">Decoupling shared control</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1694_decoupling-inlined-ui-code" rel="bookmark" title="Permanent Link to Decoupling inlined UI code">Decoupling inlined UI code</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1585_linq-to-collections-beyond-ienumerablet" rel="bookmark" title="Permanent Link to Linq to Collections: Beyond IEnumerable&lt;T&gt;">Linq to Collections: Beyond IEnumerable&lt;T&gt;</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1295_publish-your-net-library-as-a-nuget-package" rel="bookmark" title="Permanent Link to Publish your .Net library as a NuGet package">Publish your .Net library as a NuGet package</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1130_when-null-is-not-enough-an-option-type-for-c" rel="bookmark" title="Permanent Link to When null is not enough: an option type for C#">When null is not enough: an option type for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1473_unfathomable-bugs-5-readonly-or-not" rel="bookmark" title="Permanent Link to Unfathomable Bugs #5: Readonly or not">Unfathomable Bugs #5: Readonly or not</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post667_minkowski-sums-examples" rel="bookmark" title="Permanent Link to Minkowski sums: examples">Minkowski sums: examples</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1080_my-bug-my-bad-1-fractal-spheres" rel="bookmark" title="Permanent Link to My Bug, My Bad #1: Fractal Spheres">My Bug, My Bad #1: Fractal Spheres</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1007_working-around-the-brittle-ui-virtualization-in-windows-8" rel="bookmark" title="Permanent Link to Working around the brittle UI Virtualization in Windows 8">Working around the brittle UI Virtualization in Windows 8</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post938_encapsulating-angles" rel="bookmark" title="Permanent Link to Encapsulating Angles">Encapsulating Angles</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post925_unfathomable-bugs-4-keys-that-arent" rel="bookmark" title="Permanent Link to Unfathomable Bugs #4: Keys that aren’t">Unfathomable Bugs #4: Keys that aren’t</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post867_how-would-i-even-use-a-monad-in-c" rel="bookmark" title="Permanent Link to How would I even use a monad (in C#)?">How would I even use a monad (in C#)?</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post822_useful-methods-1-observable-wheneach" rel="bookmark" title="Permanent Link to Useful/Interesting Methods #1: Observable.WhenEach">Useful/Interesting Methods #1: Observable.WhenEach</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post818_unfathomable-bugs-3-stringing-you-along" rel="bookmark" title="Permanent Link to Unfathomable Bugs #3: Stringing you along">Unfathomable Bugs #3: Stringing you along</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post774_anonymous-implementation-classes-a-design-pattern-for-c" rel="bookmark" title="Permanent Link to Anonymous Implementation Classes – A Design Pattern for C#">Anonymous Implementation Classes – A Design Pattern for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post532_tasks-for-action-script-3" rel="bookmark" title="Permanent Link to Tasks for ActionScript 3 – Improving on Event-Driven Programming">Tasks for ActionScript 3 – Improving on Event-Driven Programming</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post554_minkowski-sums-and-differences" rel="bookmark" title="Permanent Link to Minkowski sums and differences">Minkowski sums and differences</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post330_non-nullable-types-vs-c-fixing-the-billion-dollar-mistake" rel="bookmark" title="Permanent Link to Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake">Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post384_unfathomable-bugs-2-slashing-out" rel="bookmark" title="Permanent Link to Unfathomable Bugs #2: Slashing Out">Unfathomable Bugs #2: Slashing Out</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post404_script-templates-and-base-classes" rel="bookmark" title="Permanent Link to Script templates and base classes">Script templates and base classes</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post373_unity-font-extraction" rel="bookmark" title="Permanent Link to Unity font extraction">Unity font extraction</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post341_abusing-phantom-types-to-encode-list-lengths-into-their-type" rel="bookmark" title="Permanent Link to Abusing “Phantom Types” to Encode List Lengths Into Their Type">Abusing “Phantom Types” to Encode List Lengths Into Their Type</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post261_constructive-criticism-of-the-reactive-extensions-api" rel="bookmark" title="Permanent Link to Constructive Criticism of the Reactive Extensions API">Constructive Criticism of the Reactive Extensions API</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post241_quaternions-part-3-2" rel="bookmark" title="Permanent Link to Quaternions part 3">Quaternions part 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post204_quaternions-part-2" rel="bookmark" title="Permanent Link to Quaternions part 2">Quaternions part 2</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post144_quaternions-part-1" rel="bookmark" title="Permanent Link to Quaternions part 1">Quaternions part 1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post157_unfathomable-bugs-1-you-can-have-things-you-can-have-things-in-things-you-can-have" rel="bookmark" title="Permanent Link to Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …">Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know" rel="bookmark" title="Permanent Link to Coroutines – More than you want to know">Coroutines – More than you want to know</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post74_asset-bundle-helper" rel="bookmark" title="Permanent Link to Asset Bundle Helper">Asset Bundle Helper</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post60_the-visual-studio-goes-away" rel="bookmark" title="Permanent Link to The Visual Studio goes away">The Visual Studio goes away</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post57_nets-time-traveling-stopwatch" rel="bookmark" title="Permanent Link to .Net’s time traveling StopWatch">.Net’s time traveling StopWatch</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post29_introducing-catalyst" rel="bookmark" title="Permanent Link to Introducing Catalyst">Introducing Catalyst</a></li>
  </ul>
<p></p>


			</div><!-- #content -->
			</section>

			</div>
		</div><!-- #container -->


</span></div><!-- .container -->

 <div id="upprev_box" style="right: -400px;">
	<h6>
		More interesting posts <span class="num"> (5 of 10 articles)</span>
	</h6>
	<div class="upprev_excerpt">
		<p>
			<a href="http://twistedoakstudios.com/blog/Post4008_collapsing-futures-easy-to-use-hard-to-represent" rel="prev">Collapsing Futures: Easy to Use, Hard to Represent</a>
		</p>
	</div>
	
		<p>
Or check out our <a href="http://twistedoakstudios.com/portfolio">Portfolio</a>.		</p><button id="upprev_close" type="button">Close</button>
</div><!-- #upprev_box -->
<link rel="stylesheet" id="al2fb_style-css" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/add-link-to-facebook.css" type="text/css" media="all">
<link rel="stylesheet" id="admin-bar-css" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/admin-bar.css" type="text/css" media="all">
<link rel="stylesheet" id="upprev-css-css" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/upprev.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-quicklatex-format-css" href="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/quicklatex-format.css" type="text/css" media="all">
<script type="text/javascript" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/admin-bar.js"></script>
<script type="text/javascript" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/jquery_002.js"></script>
<script type="text/javascript" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/upprev_js.php"></script>
<script type="text/javascript" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/comment-reply.js"></script>
	<script type="text/javascript">
		(function() {
			var request, b = document.body, c = 'className', cs = 'customize-support', rcs = new RegExp('(^|\\s+)(no-)?'+cs+'(\\s+|$)');

			request = true;

			b[c] = b[c].replace( rcs, ' ' );
			b[c] += ( window.postMessage && request ? ' ' : ' no-' ) + cs;
		}());
	</script>
			

		 
<!-- BEGIN footer-type stuff -->
<div class="container footer-container">
	<div class="row">
		
		<div class="fourcol last"><!-- .last b/c it's floated right -->
      <!-- home portfolio used to be here -->
		</div>

		<div class="eightcol" id="contact">
			<p>Twisted Oak Studios<br>
				138-1657 Barrington St.<br>
				Halifax, NS, Canada B3J 2A1</p>
			
			<p>001-902-237-7326<br>
			<a href="mailto:contact@twistedoakstudios.com">contact@twistedoakstudios.com</a></p>
		</div>

		<div class="twelvecol">
			<footer>
				<small>©2012
					<script>
						var d=new Date(); 
						yr=d.getFullYear();
						if (yr!=2012)
						document.write("- "+yr);
					</script>- 2013 Twisted Oak Studios Ltd. -- All Rights Reserved -- All images and logos are property of their respective owners.
				</small>
			</footer>
		</div>
		
		
	</div><!-- .row -->
</div><!-- .container -->
<!-- END footer stuff-->

<!-- jQuery and scrolly script for contact link -->
<script src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/jquery.js"></script>
  <script>window.jQuery || document.write('<script src="../js/libs/jquery-1.6.2.min.js"><\/script>')</script>

<script src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/scrolly.js"></script>


  <!-- Don't forget Analytics! -->



  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 7 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script>
    <script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script>
  <![endif]-->
  


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-31441525-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<div id="wpadminbar" class="nojq " role="navigation">
			<a class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a>
			<div class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Top navigation toolbar." tabindex="0">
				<ul id="wp-admin-bar-root-default" class="ab-top-menu">
		<li id="wp-admin-bar-wp-logo" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/about.php" title="About WordPress"><span class="ab-icon"></span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-wp-logo-default" class="ab-submenu">
		<li id="wp-admin-bar-about"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/about.php">About WordPress</a>		</li></ul><ul id="wp-admin-bar-wp-logo-external" class="ab-sub-secondary ab-submenu">
		<li id="wp-admin-bar-wporg"><a class="ab-item" href="http://wordpress.org/">WordPress.org</a>		</li>
		<li id="wp-admin-bar-documentation"><a class="ab-item" href="http://codex.wordpress.org/">Documentation</a>		</li>
		<li id="wp-admin-bar-support-forums"><a class="ab-item" href="http://wordpress.org/support/">Support Forums</a>		</li>
		<li id="wp-admin-bar-feedback"><a class="ab-item" href="http://wordpress.org/support/forum/requests-and-feedback">Feedback</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-site-name" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/">twistedoakstudios.com</a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-site-name-default" class="ab-submenu">
		<li id="wp-admin-bar-dashboard"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/">Dashboard</a>		</li></ul><ul id="wp-admin-bar-appearance" class="ab-submenu">
		<li id="wp-admin-bar-themes"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/themes.php">Themes</a>		</li>
		<li id="wp-admin-bar-customize" class="hide-if-no-customize"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/customize.php?url=http%3A%2F%2Ftwistedoakstudios.com%2Fblog%2FPost4130_collapsing-types-vs-monads-followup">Customize</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-updates"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/update-core.php" title="3 Plugin Updates, 1 Theme Update"><span class="ab-icon"></span><span class="ab-label">4</span><span class="screen-reader-text">3 Plugin Updates, 1 Theme Update</span></a>		</li>
		<li id="wp-admin-bar-comments"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/edit-comments.php" title="0 comments awaiting moderation"><span class="ab-icon"></span><span id="ab-awaiting-mod" class="ab-label awaiting-mod pending-count count-0">0</span></a>		</li>
		<li id="wp-admin-bar-new-content" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php" title="Add New"><span class="ab-icon"></span><span class="ab-label">New</span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-new-content-default" class="ab-submenu">
		<li id="wp-admin-bar-new-post"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php">Post</a>		</li>
		<li id="wp-admin-bar-new-media"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/media-new.php">Media</a>		</li>
		<li id="wp-admin-bar-new-link"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/link-add.php">Link</a>		</li>
		<li id="wp-admin-bar-new-page"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php?post_type=page">Page</a>		</li>
		<li id="wp-admin-bar-new-user"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/user-new.php">User</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-edit"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post.php?post=4130&amp;action=edit">Edit Post</a>		</li></ul><ul id="wp-admin-bar-top-secondary" class="ab-top-secondary ab-top-menu">
		<li id="wp-admin-bar-search" class="admin-bar-search"><div class="ab-item ab-empty-item" tabindex="-1"><form action="http://twistedoakstudios.com/blog/" method="get" id="adminbarsearch"><input class="adminbar-input" name="s" id="adminbar-search" maxlength="150" type="text"><input class="adminbar-button" value="Search" type="submit"></form></div>		</li>
		<li id="wp-admin-bar-my-account" class="menupop with-avatar"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/profile.php" title="My Account">Howdy, Craig Gidney<img alt="" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/31a6ce579f8f9f9d528715d1e941726e.png" class="avatar avatar-16 photo" height="16" width="16"></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-user-actions" class="ab-submenu">
		<li id="wp-admin-bar-user-info"><a class="ab-item" tabindex="-1" href="http://twistedoakstudios.com/blog/wp-admin/profile.php"><img alt="" src="Collapsing%20Types%20vs%20Monads%20%28followup%29_files/31a6ce579f8f9f9d528715d1e941726e_002.png" class="avatar avatar-64 photo" height="64" width="64"><span class="display-name">Craig Gidney</span><span class="username">craig</span></a>		</li>
		<li id="wp-admin-bar-edit-profile"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/profile.php">Edit My Profile</a>		</li>
		<li id="wp-admin-bar-logout"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=535624defb">Log Out</a>		</li></ul></div>		</li></ul>			</div>
			<a class="screen-reader-shortcut" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=535624defb">Log Out</a>
		</div></body></html>