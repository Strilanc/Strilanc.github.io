<!DOCTYPE html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!-- Consider adding an manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en"><script src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/Post7052_bug-hunting-1-garbled-audio-from-end-to-end.htm" async=""></script><script>var COMSCORE={beacon:function(){},purge:function(){},__noSuchMethod__:function(){}}</script><script>var urchinTracker=function(){},_gaq={push:function(){try {if(arguments[0][0]=='_link')window.location.href=arguments[0][1]}catch(er){}}},_gat={_createTracker:function(){}, _getTracker:function(){return{__noSuchMethod__:function(){},_link:function(o){if(o)location.href=o;},_linkByPost:function(){return true;},_getLinkerUrl:function(o){return o;},_trackEvent:function(){}}}};</script><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
   <!-- blog feed link -->
  <link href="http://twistedoakstudios.com/blog/?feed=rss" rel="alternate" type="application/rss+xml" title="Twisted Oak Studios Blog">

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/b/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>Bug Hunting #1: Garbled Audio from End to End | Twisted Oak Studios Blog</title>

  <meta name="description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  <meta name="author" content="/humans.txt">

  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link rel="shortcut icon" href="http://twistedoakstudios.com/blog/favicon.ico">
  <link rel="apple-touch-icon-precomposed" href="http://twistedoakstudios.com/blog/apple-touch-icon-precomposed.png">

  	<!-- The 1140px Grid - http://cssgrid.net/ -->
	<link rel="stylesheet" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/1140.css">
    <link rel="stylesheet" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/style.css">
    <link rel="stylesheet" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/blogstyle.css">
<link rel="stylesheet" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/prettify.css" media="all">
<link rel="stylesheet" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/sunburst.css" media="all">
<script type="text/javascript" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/prettify.js"></script>

	<!-- Webfonts! -->
	<link href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/css.css" rel="stylesheet" type="text/css">

	<!-- Open Graph -->
	<meta property="og:title" content="Twisted Oak Studios">
	<meta property="og:type" content="company">
	<meta property="og:url" content="http://www.twistedoakstudios.com/">
	<meta property="og:image" content="http://www.twistedoakstudios.com/images/logo.png">
	<meta property="og:description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  
  <script src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/modernizr-2.js"></script>
<script src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/embed.js" async="" type="text/javascript"></script></head>
<body class=" customize-support" onload="prettyPrint()">
<!-- begin header -->
<div class="container header-container">
	<div class="row">
		<header>
			<div class="threecol">
				<a href="http://twistedoakstudios.com/"><img class="logo" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/logo.png"></a>
			</div><!-- .threecol -->
		
			<div class="fourcol navcol">
				<nav>
					<ul class="primary-nav clearfix">
						<li><a href="http://twistedoakstudios.com/">Home</a></li>
						<li><a href="http://twistedoakstudios.com/portfolio/">Portfolio</a></li>
						<li><a href="http://twistedoakstudios.com/labs/">Labs</a></li>
						<li><a class="scroll" href="#contact">Contact</a></li>
						<li><a href="http://twistedoakstudios.com/blog/">Blog</a></li>
					</ul>
				</nav>
			</div>    

    	</header>
	</div><!-- .row -->
</div><!-- .container -->


	<div id="main">
<span class="blog">
<div class="container home-container" id="home">
	<div class="row">
    <p class="big-callout">
    <!--We're hiring! Experience with Game Dev, Unity3D, Graphics, Signal Processing, or Networking? Eligible to work in Canada? 
      <a href="http://www.twistedoakstudios.com/jobs.php">Check it out</a>!
-->
		</p><section>
			
			<div class="ninecol">


<h2><a href="http://twistedoakstudios.com/blog/Post7052_bug-hunting-1-garbled-audio-from-end-to-end" rel="bookmark" title="Permanent Link to Bug Hunting #1: Garbled Audio from End to End">Bug Hunting #1: Garbled Audio from End to End</a></h2>
<div class="meta">posted by Craig Gidney on October 1, 2013</div>

<p>“Hello. Hello? Hello!”</p>
<p>“I don’t hear anything.”</p>
<p>“How about this?” <em>dragging the bottom of the phone along the desk</em></p>
<p>“Whoah, that’s trippy. *Twangs* for days.”</p>
<p>“Yeah. I have no idea why it’s happening.”</p>
<h3>Garbling</h3>
<p>I was working on making sure our voip app could interop with another 
voip app. It was going pretty well, all things considered. It only took a
 couple hours to get to the point where we could establish a call with 
encrypted audio packets traveling back and forth. Except the audio data 
was being garbled somehow by the transition between the apps, and I 
couldn’t figure out why: it worked fine going from our app to our app, 
or from their app to their app, but not between our apps.</p>
<p>The received audio did have structure, and it did somehow relate to 
what was being sent. Silence was turned into silence with pops and 
crackles here and there, whereas rumbling sounds were played back on the
 other side as a cacophony of twangs. This indicated that the audio data
 was being somehow misinterpreted, instead of being totally destroyed by
 losing the data, decrypting with the wrong key, or something else 
catastrophic.</p>
<h3>Analyzing</h3>
<p>The art of debugging well is hard to describe. It’s a mix of figuring
 out what classes of problems could result in a bug like the one you’re 
seeing, figuring out how to quickly rule out (or confirm) each of those 
problems in order to narrow down where the bug could be, and efficiently
 cycling that process. Sort of a small scale scientific method.</p>
<p>My first guess about the cause of the bug, based on the fact that the
 audio was related-but-wrong, was a codec mismatch. We use Speex, and I 
worried that maybe the apps were specifying incompatible parameters. If 
one app was encoding with a different number of channels or on a 
different quality setting than expected by the other, maybe that would 
garble the audio without totally destroying it (i.e. what we were 
experiencing).</p>
<p>Since we have access to the source of the other app, I could compare 
their Speex setup to ours line by line. Unfortunately (or is that 
fortunately?), the setups matched. The only notable difference was that 
we were explicitly setting the sample rate to 8 kHz whereas they were 
getting 8 kHz by not setting the sample rate at all (the default is 8 
kHz). As far as I could tell or test, the codecs were fine.</p>
<p>Next idea. Maybe we’re losing or introducing data during packet 
(de)serialization. We’d needed to hack around a few deviations from the 
packet spec, and those hacks could conceivably be introducing some extra
 zeroes at the start of packets’ payloads. Alternatively, maybe we’d 
missed a necessary hack.</p>
<p>I added logging to our app. Unfortunately, since we hadn’t bothered 
with being able to build the other app, I couldn’t add logging to the 
other side. Nevertheless, I compared their packing to our parsing and 
stepped through our deserialization of their packets line by line. 
Everything seemed to be in order, except of course the audio was 
steadfast in its insistence on being garbled.</p>
<p>This is basically where I was stuck for an entire day and a half, 
questioning more and more assumptions while trying out variations of ‘is
 it the codec?’/'is it the packet serialization?’ and adding more and 
more logging. One fruitful tweak was reflecting audio: send back what we
 received, instead of what we recorded (thus bypassing any decoding or 
encoding of the audio). The bug still manifested in that case, 
indicating it was almost definitely somewhere in the serialization code.</p>
<h3>Logging to Victory</h3>
<p>Eventually, it became obvious I needed logs from the other app if I 
was going to figure this out anytime soon. I asked Jazz (a coworker) to 
work out how to make a custom build of the other app (which took another
 half day of fiddling, because nothing ever just works and I wish I 
could make this sentence sound as cynical as I feel when thinking about 
it). Once we could make custom builds, we logged the data at each stage 
in its journey in both apps so I could see the whole process.</p>
<p>It didn’t take long to find the difference:</p>
<pre>(Sender) After Speex Encoding, Before Encryption and Authentication:
1DDE5C700039CE70001CE7206F2A7940739078071BCF30959CA10AB3FEAE09FE83692BC579FABD53

(Receiver) After Authentication and Decryption, Before Speex Decoding:
1dde5c700039ce70001ce7206f2a7940<span style="background-color: #800000;">e0fe5d82f664b96b2eafef2f549b704a47181e8a37f0cf44</span></pre>
<p>What the heck. The first 32 bytes of encoded audio data are 
communicated correctly, but the rest has been garbled into random 
garbage. It almost looks like the encryption key is wrong, except that 
would make the whole thing random garbage instead of just the first 32 
bytes… better check the crypto code anyways.</p>
<p>The payload of each packet is encrypted with <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES</a> in <a href="http://en.wikipedia.org/wiki/CTR_mode#Counter_.28CTR.29">counter mode</a>.
 That’s the mode where you get the ciphertext of a block by xoring the 
encryption of a counter into your plaintext. The next block will use the
 next counter value. We didn’t actually implement AES or CTR mode, of 
course. We just have a method that hides all the details of calling out 
to an external library:</p>
<pre><code class="prettyprint"><span class="pun">+(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">cipherCTR</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">data
             withIv</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">iv
            withKey</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">key
         withCipher</span><span class="pun">:(</span><span class="kwd">const</span><span class="pln"> </span><span class="kwd">struct</span><span class="pln"> ltc_cipher_descriptor</span><span class="pun">*)</span><span class="pln">cipher
          operation</span><span class="pun">:(</span><span class="kwd">enum</span><span class="pln"> </span><span class="typ">CipherOperation</span><span class="pun">)</span><span class="pln">operation </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">require</span><span class="pun">(</span><span class="pln">data </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">require</span><span class="pun">(</span><span class="pln">iv </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">require</span><span class="pun">(</span><span class="pln">key </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">require</span><span class="pun">(</span><span class="pln">operation </span><span class="pun">==</span><span class="pln"> </span><span class="typ">Decrypt</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> operation </span><span class="pun">==</span><span class="pln"> </span><span class="typ">Encrypt</span><span class="pun">);</span><span class="pln">
    symmetric_CTR ctr</span><span class="pun">;</span><span class="pln">
    
    </span><span class="kwd">int</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> register_cipher</span><span class="pun">(&amp;</span><span class="pln">aes_desc</span><span class="pun">);</span><span class="pln">
    checkCryptoRegisterOperation</span><span class="pun">(</span><span class="pln">r</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"register_cipher"</span><span class="pun">);</span><span class="pln">
    
    </span><span class="kwd">int</span><span class="pln"> r2 </span><span class="pun">=</span><span class="pln"> ctr_start</span><span class="pun">(</span><span class="pln">r</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">iv bytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">key bytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pun">)[</span><span class="pln">key length</span><span class="pun">],</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> CTR_COUNTER_LITTLE_ENDIAN</span><span class="pun">,</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">ctr</span><span class="pun">);</span><span class="pln">
    checkCryptoOperation</span><span class="pun">(</span><span class="pln">r2</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"ctr_start"</span><span class="pun">);</span><span class="pln">
    
    </span><span class="typ">NSMutableData</span><span class="pun">*</span><span class="pln"> output </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSMutableData</span><span class="pln"> dataWithLength</span><span class="pun">:[</span><span class="pln">data length</span><span class="pun">]];</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">operation </span><span class="pun">==</span><span class="pln"> </span><span class="typ">Decrypt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">int</span><span class="pln"> r3 </span><span class="pun">=</span><span class="pln"> ctr_decrypt</span><span class="pun">([</span><span class="pln">data bytesNotNull</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">output mutableBytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">data length</span><span class="pun">],</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">ctr</span><span class="pun">);</span><span class="pln">
        checkCryptoOperation</span><span class="pun">(</span><span class="pln">r3</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"ctr_decrypt"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">int</span><span class="pln"> r3 </span><span class="pun">=</span><span class="pln"> ctr_encrypt</span><span class="pun">([</span><span class="pln">data bytesNotNull</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">output mutableBytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">data length</span><span class="pun">],</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">ctr</span><span class="pun">);</span><span class="pln">
        checkCryptoOperation</span><span class="pun">(</span><span class="pln">r3</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"ctr_encrypt"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    
    </span><span class="kwd">int</span><span class="pln"> r4 </span><span class="pun">=</span><span class="pln"> ctr_done</span><span class="pun">(&amp;</span><span class="pln">ctr</span><span class="pun">);</span><span class="pln">
    checkCryptoOperation</span><span class="pun">(</span><span class="pln">r4</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"ctr_done"</span><span class="pun">);</span><span class="pln">
    
    </span><span class="kwd">return</span><span class="pln"> output</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span><span class="pln">
</span><span class="pun">-(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">decryptWithAesInCounterModeWithKey</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">key andIv</span><span class="pun">:(</span><span class="typ">NSData</span><span class="pun">*)</span><span class="pln">iv </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">[</span><span class="typ">CryptoUtil</span><span class="pln"> cipherCTR</span><span class="pun">:</span><span class="kwd">self</span><span class="pln"> withIv</span><span class="pun">:</span><span class="pln">iv withKey</span><span class="pun">:</span><span class="pln">key withCipher</span><span class="pun">:&amp;</span><span class="pln">aes_desc operation</span><span class="pun">:</span><span class="typ">Decrypt</span><span class="pun">];</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>At this point I realize I’ve been skipping over checking this method 
because I expect it to be correct. It’s well tested (using AES test 
vectors you can find online), and it’s in code that’s well exercised. 
But the fact that the garbage data starts after the first 32 bytes, at 
the start of the second AES block, means I’d better check really 
closely.</p>
<p>Wait. What’s that flag?</p>
<pre><code class="prettyprint"><span class="kwd">int</span><span class="pln"> r2 </span><span class="pun">=</span><span class="pln"> ctr_start</span><span class="pun">(</span><span class="pln">r</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">iv bytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">[</span><span class="pln">key bytes</span><span class="pun">],</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pun">)[</span><span class="pln">key length</span><span class="pun">],</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span style="background-color: #808080;"><span class="pln">CTR_COUNTER_LITTLE_ENDIAN</span></span><span class="pun">,</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">ctr</span><span class="pun">);</span></code></pre>
<p>Oh right, incrementing the counter requires knowing whether the counter bytes are <a href="http://en.wikipedia.org/wiki/Endianness">big or little endian</a>. Otherwise everything after the first block would use the wrong… Ugh.</p>
<pre><code class="prettyprint"><span class="pln">CTR_COUNTER_</span><span style="background-color: #800000;"><del datetime="2013-09-30T19:38:43+00:00"><span class="pln">LITTLE</span></del></span><strong><span style="background-color: #008000;"><span class="pln">BIG</span></span></strong><span class="pln">_ENDIAN </span><span class="com">// (after checking method is not used anywhere else)</span></code></pre>
<p>ENDIANNNNNNN BUUUUUGGGSSS!!!!!!!!!!!!!!!!!!!!!!</p>
<p>They’re advancing the counter by incrementing from the last byte and 
carrying towards the first byte. We were advancing the counter by 
incrementing the first byte and carrying towards the last byte. The 
initial values would agree, allowing a bit of correct data to make it 
through so it sounds like a codec issue, but then we would effectively 
turn <code>0x0000 + 1</code> into <code>0x0100</code> instead of <code>0x0001</code>. Thus all data after the first block was being trashed instead of decrypted.</p>
<p>Just another example of the nastiest bugs being something trivial.</p>
<h3>Lessons</h3>
<p>This bug was entirely my fault, and could easily have been caught a lot earlier.</p>
<p><strong>Write it Down</strong>: I remember noting the endian flag was a risk when I wrote the cipherCTR method. But I deferred investigating it and then <em>forgot about it</em>.
 I should have written it down somewhere. At the very least there should
 have been a TODO comment. Even better: the todo should have gone into a
 task manager.</p>
<p>Oddly, better testing would not have caught this bug. It did involve a
 case we failed to test (none of the unit tests of cipherCTR operated on
 more than a single block of data), but adding tests for that case 
wouldn’t have caught the bug. The tests would have just reflected the 
incorrect endianness.</p>
<p><strong>Invest Sooner</strong>: Being able to log the entire pipeline
 was essential to discovering the problem. It was easy to log our half, 
but it took a significant time investment to make custom builds of the 
other app. That time investment was worth it, and being able to make 
custom builds will likely be essentially in the future anyways. We 
should have paid that cost sooner.</p>
<p>—</p>
<h3><a href="http://www.reddit.com/r/programming/comments/1nikrn/bug_hunting_garbled_audio_from_end_to_end/">Discuss on Reddit</a></h3>
<p>—</p>
<h3>My Twitter: <a href="https://twitter.com/CraigGidney">@CraigGidney</a></h3>
<p>—</p>

<blockquote><p>


</p><div id="disqus_thread"><iframe verticalscrolling="no" horizontalscrolling="no" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/a.htm" style="width: 100% ! important; border: medium none ! important; overflow: hidden ! important; height: 340px ! important;" role="complementary" allowtransparency="true" data-disqus-uid="2" id="dsq2" frameborder="0" scrolling="no" width="100%"></iframe></div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://twistedoakstudios.com/blog/Post7052_bug-hunting-1-garbled-audio-from-end-to-end';
    var disqus_identifier = '7052 http://twistedoakstudios.com/blog/?p=7052';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'twistedoakstudios';
    var disqus_title = "Bug Hunting #1: Garbled Audio from End to End";
        var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /*
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=7052';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/twistedoakstudios.com\/blog\/Post7052_bug-hunting-1-garbled-audio-from-end-to-end\/trackback"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.74';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>

<h3>
<spacer>
</spacer></h3>

<span style="color:#4A9EC2"><em><br>
Twisted Oak Studios offers consulting and development on high-tech interactive projects. Check out our <a href="http://twistedoakstudios.com/portfolio/">portfolio</a>, or <a href="mailto:contact@twistedoakstudios.com">Give us a shout</a> if you have anything you think some really rad engineers should help you with.<br>
</em></span>
<p></p></blockquote>

<h2 class="endofpage">Archive</h2>
<p></p><ul>
     <li><a href="http://twistedoakstudios.com/blog/Post7254_visualizing-the-eigenvectors-of-a-rotation" rel="bookmark" title="Permanent Link to Visualizing the Eigenvectors of a Rotation">Visualizing the Eigenvectors of a Rotation</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post7149_collapsing-futures-in-objective-c" rel="bookmark" title="Permanent Link to Collapsing Futures in Objective-C">Collapsing Futures in Objective-C</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post7052_bug-hunting-1-garbled-audio-from-end-to-end" rel="bookmark" title="Permanent Link to Bug Hunting #1: Garbled Audio from End to End">Bug Hunting #1: Garbled Audio from End to End</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post6871_impractical-experiments-1-representing-numbers-as-polynomials" rel="bookmark" title="Permanent Link to Impractical Experiments #1: Representing Numbers as Polynomials">Impractical Experiments #1: Representing Numbers as Polynomials</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post6536_implementing-quantum-pseudo-telepathy" rel="bookmark" title="Permanent Link to Implementing Quantum Pseudo-Telepathy">Implementing Quantum Pseudo-Telepathy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post6422_turn-on-your-damn-warnings" rel="bookmark" title="Permanent Link to Turn On Your Damn Warnings">Turn On Your Damn Warnings</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5953_big-o-made-trivial" rel="bookmark" title="Permanent Link to Big-O Made Trivial">Big-O Made Trivial</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5268_unfathomable-bugs-7-the-broken-oven" rel="bookmark" title="Permanent Link to Unfathomable Bugs #7: The Broken Oven">Unfathomable Bugs #7: The Broken Oven</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5623_solomonoffs-mad-scientist" rel="bookmark" title="Permanent Link to Solomonoff’s Mad Scientist">Solomonoff’s Mad Scientist</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5753_yearly-blogging-roundup-1" rel="bookmark" title="Permanent Link to Yearly Blogging Roundup #1">Yearly Blogging Roundup #1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5485_what-isnt-a-monad" rel="bookmark" title="Permanent Link to What isn’t a Monad">What isn’t a Monad</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5365_searching-a-sorted-matrix-faster" rel="bookmark" title="Permanent Link to Searching a Sorted Matrix Faster">Searching a Sorted Matrix Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5273_how-to-read-nested-ternary-operators" rel="bookmark" title="Permanent Link to How to Read Nested Ternary Operators">How to Read Nested Ternary Operators</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5204_making-sublime-text-2-jump-to-the-correct-line-with-unity-on-os-x" rel="bookmark" title="Permanent Link to Making Sublime Text 2 Jump to the Correct Line with Unity on OS X">Making Sublime Text 2 Jump to the Correct Line with Unity on OS X</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5096_my-bug-my-bad-4-reading-concurrently" rel="bookmark" title="Permanent Link to My Bug, My Bad #4: Reading Concurrently">My Bug, My Bad #4: Reading Concurrently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post5018_whole-api-testing-with-reflection" rel="bookmark" title="Permanent Link to Whole API Testing with Reflection">Whole API Testing with Reflection</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4708_optimizing-a-parser-combinator-into-a-memcpy" rel="bookmark" title="Permanent Link to Optimizing a Parser Combinator into a memcpy">Optimizing a Parser Combinator into a memcpy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4872_dont-treat-paths-like-strings" rel="bookmark" title="Permanent Link to Don’t Treat Paths Like Strings">Don’t Treat Paths Like Strings</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4706_breaking-a-toy-hash-function" rel="bookmark" title="Permanent Link to Breaking a Toy Hash Function">Breaking a Toy Hash Function</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4425_counting-iterators-lazily" rel="bookmark" title="Permanent Link to Counting Iterators Lazily">Counting Iterators Lazily</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4428_unfathomable-bugs-6-pretend-precision" rel="bookmark" title="Permanent Link to Unfathomable Bugs #6: Pretend Precision">Unfathomable Bugs #6: Pretend Precision</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4281_my-bug-my-bad-3-accidentally-attacking-warcraft-3" rel="bookmark" title="Permanent Link to My Bug, My Bad #3: Accidentally Attacking WarCraft 3">My Bug, My Bad #3: Accidentally Attacking WarCraft 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4130_collapsing-types-vs-monads-followup" rel="bookmark" title="Permanent Link to Collapsing Types vs Monads (followup)">Collapsing Types vs Monads (followup)</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post4008_collapsing-futures-easy-to-use-hard-to-represent" rel="bookmark" title="Permanent Link to Collapsing Futures: Easy to Use, Hard to Represent">Collapsing Futures: Easy to Use, Hard to Represent</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3858_eventual-exceptions-vs-programming-in-a-minimal-functional-style" rel="bookmark" title="Permanent Link to Eventual Exceptions vs Programming in a Minimal Functional Style">Eventual Exceptions vs Programming in a Minimal Functional Style</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3769_the-mystery-of-flunf" rel="bookmark" title="Permanent Link to The Mystery of Flunf">The Mystery of Flunf</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3724_explain-it-like-im-five-the-socialist-millionaire-problem-and-secure-multi-party-computation" rel="bookmark" title="Permanent Link to Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation">Explain it like I’m Five: The Socialist Millionaire Problem and Secure Multi-Party Computation</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3631_computer-science-blows-my-mind" rel="bookmark" title="Permanent Link to Computer Science Blows My Mind">Computer Science Blows My Mind</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3484_a-visit-to-execution-labs-in-montreal" rel="bookmark" title="Permanent Link to A visit to Execution Labs in Montréal">A visit to Execution Labs in Montréal</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3573_transmuting-dice-conserving-entropy" rel="bookmark" title="Permanent Link to Transmuting Dice, Conserving Entropy">Transmuting Dice, Conserving Entropy</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3516_rule-of-thumb-ask-for-the-clock" rel="bookmark" title="Permanent Link to Rule of Thumb: Ask for the Clock">Rule of Thumb: Ask for the Clock</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3477_rule-of-thumb-use-purposefully-weakened-methods" rel="bookmark" title="Permanent Link to Rule of Thumb: Use Purposefully Weakened Methods">Rule of Thumb: Use Purposefully Weakened Methods</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3376_rule-of-thumb-preconditions-should-be-checked-explicitly" rel="bookmark" title="Permanent Link to Rule of thumb: Preconditions Should be Checked Explicitly">Rule of thumb: Preconditions Should be Checked Explicitly</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3280_intersecting-linked-lists-faster" rel="bookmark" title="Permanent Link to Intersecting Linked Lists Faster">Intersecting Linked Lists Faster</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3138_mouse-path-smoothing-for-jack-lumber" rel="bookmark" title="Permanent Link to Mouse Path Smoothing for Jack Lumber">Mouse Path Smoothing for Jack Lumber</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post3044_my-bug-my-bad-2-sunk-by-float" rel="bookmark" title="Permanent Link to My Bug, My Bad #2: Sunk by Float">My Bug, My Bad #2: Sunk by Float</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2852_repeat-yourself-differently" rel="bookmark" title="Permanent Link to Repeat Yourself Differently">Repeat Yourself Differently</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2644_grovers-quantum-search-algorithm" rel="bookmark" title="Permanent Link to Grover’s Quantum Search Algorithm">Grover’s Quantum Search Algorithm</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2766_followup-to-non-nullable-types-vs-c" rel="bookmark" title="Permanent Link to Followup to Non-Nullable Types vs C#">Followup to Non-Nullable Types vs C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2540_optimizing-just-in-time-with-expression-trees" rel="bookmark" title="Permanent Link to Optimizing Just in Time with Expression Trees">Optimizing Just in Time with Expression Trees</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2353_when-one-way-latency-doesnt-matter" rel="bookmark" title="Permanent Link to When One-Way Latency Doesn’t Matter">When One-Way Latency Doesn’t Matter</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2194_determining-exactly-ifwhenwhere-a-moving-line-intersected-a-moving-point" rel="bookmark" title="Permanent Link to Determining exactly if/when/where a moving line intersected a moving point">Determining exactly if/when/where a moving line intersected a moving point</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2061_emulating-actors-in-c-with-asyncawait" rel="bookmark" title="Permanent Link to Emulating Actors in C# with Async/Await">Emulating Actors in C# with Async/Await</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post2096_making-an-immutable-queue-with-guaranteed-constant-time-operations" rel="bookmark" title="Permanent Link to Making an immutable queue with guaranteed constant time operations">Making an immutable queue with guaranteed constant time operations</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post399_improving-checked-exceptions" rel="bookmark" title="Permanent Link to Improving Checked Exceptions">Improving Checked Exceptions</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1941_perishable-collections-the-benefits-of-removal-by-lifetime" rel="bookmark" title="Permanent Link to Perishable Collections: The Benefits of Removal-by-Lifetime">Perishable Collections: The Benefits of Removal-by-Lifetime</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1823_decoupling-shared-control" rel="bookmark" title="Permanent Link to Decoupling shared control">Decoupling shared control</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1694_decoupling-inlined-ui-code" rel="bookmark" title="Permanent Link to Decoupling inlined UI code">Decoupling inlined UI code</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1585_linq-to-collections-beyond-ienumerablet" rel="bookmark" title="Permanent Link to Linq to Collections: Beyond IEnumerable&lt;T&gt;">Linq to Collections: Beyond IEnumerable&lt;T&gt;</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1295_publish-your-net-library-as-a-nuget-package" rel="bookmark" title="Permanent Link to Publish your .Net library as a NuGet package">Publish your .Net library as a NuGet package</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1130_when-null-is-not-enough-an-option-type-for-c" rel="bookmark" title="Permanent Link to When null is not enough: an option type for C#">When null is not enough: an option type for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1473_unfathomable-bugs-5-readonly-or-not" rel="bookmark" title="Permanent Link to Unfathomable Bugs #5: Readonly or not">Unfathomable Bugs #5: Readonly or not</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post667_minkowski-sums-examples" rel="bookmark" title="Permanent Link to Minkowski sums: examples">Minkowski sums: examples</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1080_my-bug-my-bad-1-fractal-spheres" rel="bookmark" title="Permanent Link to My Bug, My Bad #1: Fractal Spheres">My Bug, My Bad #1: Fractal Spheres</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1007_working-around-the-brittle-ui-virtualization-in-windows-8" rel="bookmark" title="Permanent Link to Working around the brittle UI Virtualization in Windows 8">Working around the brittle UI Virtualization in Windows 8</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post938_encapsulating-angles" rel="bookmark" title="Permanent Link to Encapsulating Angles">Encapsulating Angles</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post925_unfathomable-bugs-4-keys-that-arent" rel="bookmark" title="Permanent Link to Unfathomable Bugs #4: Keys that aren’t">Unfathomable Bugs #4: Keys that aren’t</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post867_how-would-i-even-use-a-monad-in-c" rel="bookmark" title="Permanent Link to How would I even use a monad (in C#)?">How would I even use a monad (in C#)?</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post822_useful-methods-1-observable-wheneach" rel="bookmark" title="Permanent Link to Useful/Interesting Methods #1: Observable.WhenEach">Useful/Interesting Methods #1: Observable.WhenEach</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post818_unfathomable-bugs-3-stringing-you-along" rel="bookmark" title="Permanent Link to Unfathomable Bugs #3: Stringing you along">Unfathomable Bugs #3: Stringing you along</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post774_anonymous-implementation-classes-a-design-pattern-for-c" rel="bookmark" title="Permanent Link to Anonymous Implementation Classes – A Design Pattern for C#">Anonymous Implementation Classes – A Design Pattern for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post532_tasks-for-action-script-3" rel="bookmark" title="Permanent Link to Tasks for ActionScript 3 – Improving on Event-Driven Programming">Tasks for ActionScript 3 – Improving on Event-Driven Programming</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post554_minkowski-sums-and-differences" rel="bookmark" title="Permanent Link to Minkowski sums and differences">Minkowski sums and differences</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post330_non-nullable-types-vs-c-fixing-the-billion-dollar-mistake" rel="bookmark" title="Permanent Link to Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake">Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post384_unfathomable-bugs-2-slashing-out" rel="bookmark" title="Permanent Link to Unfathomable Bugs #2: Slashing Out">Unfathomable Bugs #2: Slashing Out</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post404_script-templates-and-base-classes" rel="bookmark" title="Permanent Link to Script templates and base classes">Script templates and base classes</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post373_unity-font-extraction" rel="bookmark" title="Permanent Link to Unity font extraction">Unity font extraction</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post341_abusing-phantom-types-to-encode-list-lengths-into-their-type" rel="bookmark" title="Permanent Link to Abusing “Phantom Types” to Encode List Lengths Into Their Type">Abusing “Phantom Types” to Encode List Lengths Into Their Type</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post261_constructive-criticism-of-the-reactive-extensions-api" rel="bookmark" title="Permanent Link to Constructive Criticism of the Reactive Extensions API">Constructive Criticism of the Reactive Extensions API</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post241_quaternions-part-3-2" rel="bookmark" title="Permanent Link to Quaternions part 3">Quaternions part 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post204_quaternions-part-2" rel="bookmark" title="Permanent Link to Quaternions part 2">Quaternions part 2</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post144_quaternions-part-1" rel="bookmark" title="Permanent Link to Quaternions part 1">Quaternions part 1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post157_unfathomable-bugs-1-you-can-have-things-you-can-have-things-in-things-you-can-have" rel="bookmark" title="Permanent Link to Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …">Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know" rel="bookmark" title="Permanent Link to Coroutines – More than you want to know">Coroutines – More than you want to know</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post74_asset-bundle-helper" rel="bookmark" title="Permanent Link to Asset Bundle Helper">Asset Bundle Helper</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post60_the-visual-studio-goes-away" rel="bookmark" title="Permanent Link to The Visual Studio goes away">The Visual Studio goes away</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post57_nets-time-traveling-stopwatch" rel="bookmark" title="Permanent Link to .Net’s time traveling StopWatch">.Net’s time traveling StopWatch</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post29_introducing-catalyst" rel="bookmark" title="Permanent Link to Introducing Catalyst">Introducing Catalyst</a></li>
  </ul>
<p></p>


			</div><!-- #content -->
			</section>

			</div>
		</div><!-- #container -->


</span></div><!-- .container -->

 <div id="upprev_box" style="right: -400px;">
	<h6>
		More interesting posts <span class="num"> (1 of 12 articles)</span>
	</h6>
	<div class="upprev_excerpt">
		<p>
			<a href="http://twistedoakstudios.com/blog/Post6422_turn-on-your-damn-warnings" rel="prev">Turn On Your Damn Warnings</a>
		</p>
	</div>
	
		<p>
Or check out our <a href="http://twistedoakstudios.com/portfolio">Portfolio</a>.		</p><button id="upprev_close" type="button">Close</button>
</div><!-- #upprev_box -->
<link rel="stylesheet" id="al2fb_style-css" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/add-link-to-facebook.css" type="text/css" media="all">
<link rel="stylesheet" id="admin-bar-css" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/admin-bar.css" type="text/css" media="all">
<link rel="stylesheet" id="upprev-css-css" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/upprev.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-quicklatex-format-css" href="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/quicklatex-format.css" type="text/css" media="all">
<script type="text/javascript" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/admin-bar.js"></script>
<script type="text/javascript" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/jquery_002.js"></script>
<script type="text/javascript" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/upprev_js.php"></script>
<script type="text/javascript" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/comment-reply.js"></script>
	<script type="text/javascript">
		(function() {
			var request, b = document.body, c = 'className', cs = 'customize-support', rcs = new RegExp('(^|\\s+)(no-)?'+cs+'(\\s+|$)');

			request = true;

			b[c] = b[c].replace( rcs, ' ' );
			b[c] += ( window.postMessage && request ? ' ' : ' no-' ) + cs;
		}());
	</script>
			

		 
<!-- BEGIN footer-type stuff -->
<div class="container footer-container">
	<div class="row">
		
		<div class="fourcol last"><!-- .last b/c it's floated right -->
      <!-- home portfolio used to be here -->
		</div>

		<div class="eightcol" id="contact">
			<p>Twisted Oak Studios<br>
				138-1657 Barrington St.<br>
				Halifax, NS, Canada B3J 2A1</p>
			
			<p>001-902-237-7326<br>
			<a href="mailto:contact@twistedoakstudios.com">contact@twistedoakstudios.com</a></p>
		</div>

		<div class="twelvecol">
			<footer>
				<small>©2012
					<script>
						var d=new Date(); 
						yr=d.getFullYear();
						if (yr!=2012)
						document.write("- "+yr);
					</script>- 2013 Twisted Oak Studios Ltd. -- All Rights Reserved -- All images and logos are property of their respective owners.
				</small>
			</footer>
		</div>
		
		
	</div><!-- .row -->
</div><!-- .container -->
<!-- END footer stuff-->

<!-- jQuery and scrolly script for contact link -->
<script src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/jquery.js"></script>
  <script>window.jQuery || document.write('<script src="../js/libs/jquery-1.6.2.min.js"><\/script>')</script>

<script src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/scrolly.js"></script>


  <!-- Don't forget Analytics! -->



  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 7 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script>
    <script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script>
  <![endif]-->
  


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-31441525-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<div id="wpadminbar" class="nojq " role="navigation">
			<a class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a>
			<div class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Top navigation toolbar." tabindex="0">
				<ul id="wp-admin-bar-root-default" class="ab-top-menu">
		<li id="wp-admin-bar-wp-logo" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/about.php" title="About WordPress"><span class="ab-icon"></span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-wp-logo-default" class="ab-submenu">
		<li id="wp-admin-bar-about"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/about.php">About WordPress</a>		</li></ul><ul id="wp-admin-bar-wp-logo-external" class="ab-sub-secondary ab-submenu">
		<li id="wp-admin-bar-wporg"><a class="ab-item" href="http://wordpress.org/">WordPress.org</a>		</li>
		<li id="wp-admin-bar-documentation"><a class="ab-item" href="http://codex.wordpress.org/">Documentation</a>		</li>
		<li id="wp-admin-bar-support-forums"><a class="ab-item" href="http://wordpress.org/support/">Support Forums</a>		</li>
		<li id="wp-admin-bar-feedback"><a class="ab-item" href="http://wordpress.org/support/forum/requests-and-feedback">Feedback</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-site-name" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/">Twisted Oak Studios Blog</a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-site-name-default" class="ab-submenu">
		<li id="wp-admin-bar-dashboard"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/">Dashboard</a>		</li></ul><ul id="wp-admin-bar-appearance" class="ab-submenu">
		<li id="wp-admin-bar-themes"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/themes.php">Themes</a>		</li>
		<li id="wp-admin-bar-customize" class="hide-if-no-customize"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/customize.php?url=http%3A%2F%2Ftwistedoakstudios.com%2Fblog%2FPost7052_bug-hunting-1-garbled-audio-from-end-to-end">Customize</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-updates"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/update-core.php" title="3 Plugin Updates, 3 Theme Updates"><span class="ab-icon"></span><span class="ab-label">6</span><span class="screen-reader-text">3 Plugin Updates, 3 Theme Updates</span></a>		</li>
		<li id="wp-admin-bar-comments"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/edit-comments.php" title="0 comments awaiting moderation"><span class="ab-icon"></span><span id="ab-awaiting-mod" class="ab-label awaiting-mod pending-count count-0">0</span></a>		</li>
		<li id="wp-admin-bar-new-content" class="menupop"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php" title="Add New"><span class="ab-icon"></span><span class="ab-label">New</span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-new-content-default" class="ab-submenu">
		<li id="wp-admin-bar-new-post"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php">Post</a>		</li>
		<li id="wp-admin-bar-new-media"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/media-new.php">Media</a>		</li>
		<li id="wp-admin-bar-new-link"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/link-add.php">Link</a>		</li>
		<li id="wp-admin-bar-new-page"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post-new.php?post_type=page">Page</a>		</li>
		<li id="wp-admin-bar-new-user"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/user-new.php">User</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-edit"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/post.php?post=7052&amp;action=edit">Edit Post</a>		</li></ul><ul id="wp-admin-bar-top-secondary" class="ab-top-secondary ab-top-menu">
		<li id="wp-admin-bar-search" class="admin-bar-search"><div class="ab-item ab-empty-item" tabindex="-1"><form action="http://twistedoakstudios.com/blog/" method="get" id="adminbarsearch"><input class="adminbar-input" name="s" id="adminbar-search" maxlength="150" type="text"><input class="adminbar-button" value="Search" type="submit"></form></div>		</li>
		<li id="wp-admin-bar-my-account" class="menupop with-avatar"><a class="ab-item" aria-haspopup="true" href="http://twistedoakstudios.com/blog/wp-admin/profile.php" title="My Account">Howdy, Craig Gidney<img alt="" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/31a6ce579f8f9f9d528715d1e941726e.png" class="avatar avatar-16 photo" height="16" width="16"></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-user-actions" class="ab-submenu">
		<li id="wp-admin-bar-user-info"><a class="ab-item" tabindex="-1" href="http://twistedoakstudios.com/blog/wp-admin/profile.php"><img alt="" src="Bug%20Hunting%20%231%20%20Garbled%20Audio%20from%20End%20to%20End_files/31a6ce579f8f9f9d528715d1e941726e_002.png" class="avatar avatar-64 photo" height="64" width="64"><span class="display-name">Craig Gidney</span><span class="username">craig</span></a>		</li>
		<li id="wp-admin-bar-edit-profile"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-admin/profile.php">Edit My Profile</a>		</li>
		<li id="wp-admin-bar-logout"><a class="ab-item" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=81b5dfe333">Log Out</a>		</li></ul></div>		</li></ul>			</div>
			<a class="screen-reader-shortcut" href="http://twistedoakstudios.com/blog/wp-login.php?action=logout&amp;_wpnonce=81b5dfe333">Log Out</a>
		</div></body></html>