<!DOCTYPE html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!-- Consider adding an manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en"><script id="bug.surrogate">var urchinTracker=function(){},_gaq={push:function(){try {if(arguments[0][0]=='_link')window.location.href=arguments[0][1]}catch(er){}}},_gat={_createTracker:function(){}, _getTracker:function(){return{__noSuchMethod__:function(){},_link:function(o){if(o)location.href=o;},_linkByPost:function(){return true;},_getLinkerUrl:function(o){return o;},_trackEvent:function(){}}}}; if (document.location.host == 'www.salon.com') {var _ga_ = document.querySelectorAll('script[src$=ga\\.js]')[0], ga_e = document.createEvent('Event'); ga_e.initEvent('load', true, true);_ga_.dispatchEvent(ga_e);}</script><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
   <!-- blog feed link -->
  <link href="http://twistedoakstudios.com/blog/?feed=rss" rel="alternate" type="application/rss+xml" title="Twisted Oak Studios Blog">

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/b/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title>Twisted Oak Studios | Game Developers | Unity 3D Development</title>
  <meta name="description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  <meta name="author" content="/humans.txt">

  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link rel="shortcut icon" href="http://twistedoakstudios.com/blog/favicon.ico">
  <link rel="apple-touch-icon-precomposed" href="http://twistedoakstudios.com/blog/apple-touch-icon-precomposed.png">

  	<!-- The 1140px Grid - http://cssgrid.net/ -->
	<link rel="stylesheet" href="Post1473_unfathomable-bugs-5-readonly-or-not_files/1140.css">
    <link rel="stylesheet" href="Post1473_unfathomable-bugs-5-readonly-or-not_files/style.css">
    <link rel="stylesheet" href="Post1473_unfathomable-bugs-5-readonly-or-not_files/blogstyle.css">
<link rel="stylesheet" href="Post1473_unfathomable-bugs-5-readonly-or-not_files/prettify.css" media="all">
<link rel="stylesheet" href="Post1473_unfathomable-bugs-5-readonly-or-not_files/sunburst.css" media="all">
<script type="text/javascript" src="Post1473_unfathomable-bugs-5-readonly-or-not_files/prettify.js"></script>

	<!-- Webfonts! -->
	<link href="Post1473_unfathomable-bugs-5-readonly-or-not_files/css.css" rel="stylesheet" type="text/css">

	<!-- Open Graph -->
	<meta property="og:title" content="Twisted Oak Studios">
	<meta property="og:type" content="company">
	<meta property="og:url" content="http://www.twistedoakstudios.com/">
	<meta property="og:image" content="http://www.twistedoakstudios.com/images/logo.png">
	<meta property="og:description" content="As a lean co-operative team of seasoned developers, Twisted Oak is able to offer efficient, flexible remote and on-the-floor development and consulting without any middle-man or excessive administrivia.">
  
  <script src="Post1473_unfathomable-bugs-5-readonly-or-not_files/modernizr-2.js"></script>
</head>
<body onload="prettyPrint()">
<!-- begin header -->
<div class="container header-container">
	<div class="row">
		<header>
			<div class="threecol">
				<a href="#"><img class="logo" src="Post1473_unfathomable-bugs-5-readonly-or-not_files/logo.png"></a>
			</div><!-- .threecol -->
		
			<div class="fourcol navcol">
				<nav>
					<ul class="primary-nav clearfix">
						<li><a href="http://twistedoakstudios.com/">Home</a></li>
						<li><a href="http://twistedoakstudios.com/portfolio/">Portfolio</a></li>
						<li><a class="scroll" href="#contact">Contact</a></li>
						<li><a href="http://twistedoakstudios.com/blog/">Blog</a></li>
					</ul>
				</nav>
			</div>    

    	</header>
	</div><!-- .row -->
</div><!-- .container -->


	<div id="main">
<span class="blog">
<div class="container home-container" id="home">
	<div class="row">
		<section>
			
			<div class="ninecol">


<h2><a href="http://twistedoakstudios.com/blog/Post1473_unfathomable-bugs-5-readonly-or-not" rel="bookmark" title="Permanent Link to Unfathomable Bugs #5: Readonly or not">Unfathomable Bugs #5: Readonly or not</a></h2>
<div class="meta">posted by Craig Gidney on November 30, 2012</div>

<p>Normally I post on Tuesdays, but I already have the next two posts 
written and this issue is too short and sweet to wait two and a half 
weeks. I’m actually quite surprised I haven’t stumbled on it before.</p>
<p>Today’s bug comes courtesy of Microsoft. Thank you, Microsoft, this 
series wouldn’t exist without the generous support of entities like you.</p>
<p>—</p>
<p>I was writing an extension method that would expose an IList&lt;T&gt;
 as an IReadOnlyList&lt;T&gt; when I came across the problem.</p>
<p>Because of historical coincidence, IReadOnlyList&lt;T&gt; is not 
implemented by IList&lt;T&gt;. As a result, some classes that implement 
IList&lt;T&gt; don’t implement IReadOnlyList&lt;T&gt;. A somewhat 
related problem is that many classes that implement 
IReadOnlyList&lt;T&gt; are readable but not read<strong>only</strong> 
(example error case: you pass a read only list to some dynamic binding 
code, which sees that it’s actually a mutable list, and end up with 
two-way binding instead of one-way). The extension method I was writing 
was for working around these issues, and looked like this:</p>
<pre><code class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">IReadOnlyList</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="typ">AsReadOnlyList</span><span class="pun">(</span><span class="typ">IList</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> list</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">list </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArgumentNullException</span><span class="pun">(</span><span class="str">"list"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">list</span><span class="pun">.</span><span class="typ">IsReadOnly</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> list </span><span class="kwd">as</span><span class="pln"> </span><span class="typ">IReadOnlyList</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;;</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">r </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> r</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ReadOnlyCollection</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;(</span><span class="pln">list</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Notice the special case that doesn’t wrap the input if it is already a
 truly readonly list. To confirm that it was working properly, I tested 
some cases where wrapping should and shouldn’t occur. This resulted in a
 very confusing failure:</p>
<pre><code class="prettyprint"><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span><span class="pln">
</span><span class="typ">Assert</span><span class="pun">.</span><span class="typ">AreNotSame</span><span class="pun">(</span><span class="pln">r</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">.</span><span class="typ">AsReadOnlyList</span><span class="pun">());</span><span class="pln"> </span><span class="com">// fails</span></code></pre>
<p>Arrays aren’t being wrapped! This is despite the fact that Array.IsReadOnly is <a href="http://msdn.microsoft.com/en-us/library/system.array.isreadonly.aspx">documented as guaranteed to return false</a>
 (even for 0-length arrays where it would be fine if it returned true). 
This, you might reasonably expect, would seem to guarantee that a branch
 conditioned on the IsReadOnly property would not be taken. I even 
confirmed that the documentation was correct:</p>
<pre><code class="prettyprint"><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span><span class="pln">
</span><span class="typ">Assert</span><span class="pun">.</span><span class="typ">IsFalse</span><span class="pun">(</span><span class="pln">r</span><span class="pun">.</span><span class="typ">IsReadOnly</span><span class="pun">);</span><span class="pln"> </span><span class="com">// passes</span><span class="pln">
</span><span class="typ">Assert</span><span class="pun">.</span><span class="typ">AreNotSame</span><span class="pun">(</span><span class="pln">r</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">.</span><span class="typ">AsReadOnlyList</span><span class="pun">());</span><span class="pln"> </span><span class="com">// still fails. what. </span></code></pre>
<p>What the heck is going on?? It took some very confused experimenting, but the issue is that <strong>Array.IsReadOnly is always false, until you cast to an IList&lt;T&gt;, in which case it is always true</strong>. Despite the fact that the array-as-IList&lt;T&gt; still allows you to make changes:</p>
<pre><code class="prettyprint"><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span><span class="pln">
</span><span class="typ">Assert</span><span class="pun">.</span><span class="typ">IsFalse</span><span class="pun">(</span><span class="pln">r</span><span class="pun">.</span><span class="typ">IsReadOnly</span><span class="pun">);</span><span class="pln"> </span><span class="com">// passes</span><span class="pln">
</span><span class="typ">IList</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> c </span><span class="pun">=</span><span class="pln"> r</span><span class="pun">;</span><span class="pln">
c</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> </span><span class="com">// works. clearly not readonly</span><span class="pln">
</span><span class="typ">Assert</span><span class="pun">.</span><span class="typ">IsFalse</span><span class="pun">(</span><span class="pln">c</span><span class="pun">.</span><span class="typ">IsReadOnly</span><span class="pun">);</span><span class="pln"> </span><span class="com">// fails</span></code></pre>
<p>How is this possible? Well, the array type has an explicit implementation of <a href="http://msdn.microsoft.com/en-us/library/0cfatk9t.aspx">ICollection&lt;T&gt;.IsReadOnly</a>,
 distinct from the public Array.IsReadOnly getter, that returns true 
instead of false. That’s right, an on-purpose differing explicit 
implementation of the “same” method. This bug is coming <span style="font-family:comic sans ms;">from inside the house</span>.</p>
<p>But seriously, this “bug” is by design. Apparently when Microsoft 
decided to not keep the IsFixedSize property when making a generic 
variant of IList, they also <a href="http://blogs.msdn.com/b/kcwalina/archive/2005/05/18/419203.aspx">decided to subtly change the meaning of IsReadOnly</a>.
 However, since changing the result of the existing method would be a 
breaking change, they just decided to… have a little bit of both 
meanings. Ugh.</p>
<p>I’m <a href="http://nitoprograms.blogspot.ca/2009/11/icollection-isreadonly-and-arrays.html">not the first to notice</a>
 this issue. I probably won’t be the last, either. Keep it in mind, 
because to write actually correct code you have to check for arrays in 
addition to checking IsReadOnly:</p>
<pre><code class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">bool</span><span class="pln"> </span><span class="typ">IsReallyReallyReadOnly</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;(</span><span class="kwd">this</span><span class="pln"> </span><span class="typ">IList</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> list</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> list</span><span class="pun">.</span><span class="typ">IsReadOnly</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">!(</span><span class="pln">list </span><span class="kwd">is</span><span class="pln"> T</span><span class="pun">[]);</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>—</p>
<h3><a href="http://www.reddit.com/r/programming/comments/142q63/unfathomable_bug_readonly_or_not/">Discuss on Reddit</a></h3>
<p>—</p>

<blockquote><p>
<span style="color:#4A9EC2"><em><br>
Twisted Oak Studios offers efficient, flexible remote and on-the-floor 
development and consulting without any middle-man or excessive 
administrivia. <a href="mailto:contact@twistedoakstudios.com">Give us a shout</a> if you have anything you think some really rad engineers should help you with.<br>
</em></span>
</p></blockquote>
<h2>Older Posts</h2>
<p></p><ul>
     <li><a href="http://twistedoakstudios.com/blog/Post1295_publish-your-net-library-as-a-nuget-package" rel="bookmark" title="Permanent Link to Publish your .Net library as a NuGet package">Publish your .Net library as a NuGet package</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1130_when-null-is-not-enough-an-option-type-for-c" rel="bookmark" title="Permanent Link to When null is not enough: an option type for C#">When null is not enough: an option type for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post667_minkowski-sums-examples" rel="bookmark" title="Permanent Link to Minkowski sums: examples">Minkowski sums: examples</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1080_my-bug-my-bad-1-fractal-spheres" rel="bookmark" title="Permanent Link to My Bug, My Bad #1: Fractal Spheres">My Bug, My Bad #1: Fractal Spheres</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post1007_working-around-the-brittle-ui-virtualization-in-windows-8" rel="bookmark" title="Permanent Link to Working around the brittle UI Virtualization in Windows 8">Working around the brittle UI Virtualization in Windows 8</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post938_encapsulating-angles" rel="bookmark" title="Permanent Link to Encapsulating Angles">Encapsulating Angles</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post925_unfathomable-bugs-4-keys-that-arent" rel="bookmark" title="Permanent Link to Unfathomable Bugs #4: Keys that aren’t">Unfathomable Bugs #4: Keys that aren’t</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post867_how-would-i-even-use-a-monad-in-c" rel="bookmark" title="Permanent Link to How would I even use a monad (in C#)?">How would I even use a monad (in C#)?</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post822_useful-methods-1-observable-wheneach" rel="bookmark" title="Permanent Link to Useful/Interesting Methods #1: Observable.WhenEach">Useful/Interesting Methods #1: Observable.WhenEach</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post818_unfathomable-bugs-3-stringing-you-along" rel="bookmark" title="Permanent Link to Unfathomable Bugs #3: Stringing you along">Unfathomable Bugs #3: Stringing you along</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post774_anonymous-implementation-classes-a-design-pattern-for-c" rel="bookmark" title="Permanent Link to Anonymous Implementation Classes – A Design Pattern for C#">Anonymous Implementation Classes – A Design Pattern for C#</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post532_tasks-for-action-script-3" rel="bookmark" title="Permanent Link to Tasks for ActionScript 3 – Improving on Event-Driven Programming">Tasks for ActionScript 3 – Improving on Event-Driven Programming</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post554_minkowski-sums-and-differences" rel="bookmark" title="Permanent Link to Minkowski sums and differences">Minkowski sums and differences</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post330_non-nullable-types-vs-c-fixing-the-billion-dollar-mistake" rel="bookmark" title="Permanent Link to Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake">Non-Nullable Types vs C#: Fixing the Billion Dollar Mistake</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post384_unfathomable-bugs-2-slashing-out" rel="bookmark" title="Permanent Link to Unfathomable Bugs #2: Slashing Out">Unfathomable Bugs #2: Slashing Out</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post404_script-templates-and-base-classes" rel="bookmark" title="Permanent Link to Script templates and base classes">Script templates and base classes</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post373_unity-font-extraction" rel="bookmark" title="Permanent Link to Unity font extraction">Unity font extraction</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post341_abusing-phantom-types-to-encode-list-lengths-into-their-type" rel="bookmark" title="Permanent Link to Abusing “Phantom Types” to Encode List Lengths Into Their Type">Abusing “Phantom Types” to Encode List Lengths Into Their Type</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post261_constructive-criticism-of-the-reactive-extensions-api" rel="bookmark" title="Permanent Link to Constructive Criticism of the Reactive Extensions API">Constructive Criticism of the Reactive Extensions API</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post241_quaternions-part-3-2" rel="bookmark" title="Permanent Link to Quaternions part 3">Quaternions part 3</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post204_quaternions-part-2" rel="bookmark" title="Permanent Link to Quaternions part 2">Quaternions part 2</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post144_quaternions-part-1" rel="bookmark" title="Permanent Link to Quaternions part 1">Quaternions part 1</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post157_unfathomable-bugs-1-you-can-have-things-you-can-have-things-in-things-you-can-have" rel="bookmark" title="Permanent Link to Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …">Unfathomable Bugs #1: You can have things! You can have things IN things! You can have …</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know" rel="bookmark" title="Permanent Link to Coroutines – More than you want to know">Coroutines – More than you want to know</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post74_asset-bundle-helper" rel="bookmark" title="Permanent Link to Asset Bundle Helper">Asset Bundle Helper</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post60_the-visual-studio-goes-away" rel="bookmark" title="Permanent Link to The Visual Studio goes away">The Visual Studio goes away</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post57_nets-time-traveling-stopwatch" rel="bookmark" title="Permanent Link to .Net’s time traveling StopWatch">.Net’s time traveling StopWatch</a></li>
     <li><a href="http://twistedoakstudios.com/blog/Post29_introducing-catalyst" rel="bookmark" title="Permanent Link to Introducing Catalyst">Introducing Catalyst</a></li>
  </ul>
<p></p>


			</div><!-- #content -->
			</section>

			</div>
		</div><!-- #container -->


</span></div><!-- .container -->


<!-- BEGIN footer-type stuff -->
<div class="container footer-container">
	<div class="row">
		
		<div class="fourcol last"><!-- .last b/c it's floated right -->
			<nav>
				<ul class="primary-nav clearfix">
					<li><a href="http://www.twistedoakstudios.com/">Home</a></li>
					<li><a href="http://twistedoakstudios.com/portfolio">Portfolio</a></li>
				</ul>
			</nav>
		</div>
		
		<div class="eightcol" id="contact">
			<p>Twisted Oak Studios<br>
				6082 Shirley Street<br>
				Halifax, NS, Canada B3H 2M8</p>
			
			<p>001-902-237-7326<br>
			<a href="mailto:contact@twistedoakstudios.com">contact@twistedoakstudios.com</a></p>
		</div>
		
		<div class="twelvecol">
			<footer>
				<small>©2012
					<script>
						var d=new Date(); 
						yr=d.getFullYear();
						if (yr!=2012)
						document.write("- "+yr);
					</script> Twisted Oak Studios Ltd. -- All Rights Reserved -- All images and logos are property of their respective owners.
				</small>
			</footer>
		</div>
		
		
	</div><!-- .row -->
</div><!-- .container -->
<!-- END footer stuff-->

<!-- jQuery and scrolly script for contact link -->
<script src="Post1473_unfathomable-bugs-5-readonly-or-not_files/jquery.js"></script>
  <script>window.jQuery || document.write('<script src="../js/libs/jquery-1.6.2.min.js"><\/script>')</script>

<script src="Post1473_unfathomable-bugs-5-readonly-or-not_files/scrolly.js"></script>


  <!-- Don't forget Analytics! -->



  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 7 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script>
    <script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script>
  <![endif]-->
  

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-31441525-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script></body></html>